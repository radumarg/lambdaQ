swap :: Qbit ** 5 -> Qbit ** 5
swap q0 q1 q2 q3 q4 = q4 q3 q2 q1 q0

qft_pass_5 :: Qbit ** 5 -> Qbit ** 5
qft_pass_5 = q0, q1, q2, q3, q4 <- qubits;
             q0 <- gate H q0;
             q0, q1 <- gate ROOT_Z 4 q0 q1;
             q0, q2 <- gate ROOT_Z 4 q0 q2;
             q0, q3 <- gate ROOT_Z 4 q0 q3;
             q0, q1 <- gate ROOT_Z 4 q0 q1
             (q0, q1, q2, q3, q4)

--TODO: add rest of qft_pass functions
-- In the future iterations of this project will introduce: natural numbers, lists, case expression + pattern matching to the language, 
-- making possible to declare one generic qft_pass function 
 
qft' :: Qbit ** 5 -> Qbit ** 5
qft' qubits = q0, q1, q2, q3, q4 <- qubits;
              q0, q1, q2, q3, q4 <- qft_pass_5 q0, q1, q2, q3, q4;
	      q1, q2, q3, q4 <- qft_pass_4 q1, q2, q3, q4;
              q2, q3, q4 <- qft_pass_3 q2, q3, q4;
              q3, q4 <- qft_pass_2 q3 q4;
              q4 <- gate H  q4

qft :: Qbit ** 5 -> Qbit ** 5
qft = swap qft'

main :: Qbit ** 5
main = qft
