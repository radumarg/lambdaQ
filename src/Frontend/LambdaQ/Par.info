-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Frontend/LambdaQ/Par.y
-----------------------------------------------------------------------------

state 46 contains 6 shift/reduce conflicts.
state 105 contains 1 shift/reduce conflicts.
state 106 contains 1 shift/reduce conflicts.
state 107 contains 1 shift/reduce conflicts.
state 112 contains 1 shift/reduce conflicts.
state 113 contains 1 shift/reduce conflicts.
state 114 contains 1 shift/reduce conflicts.
state 117 contains 1 shift/reduce conflicts.
state 118 contains 1 shift/reduce conflicts.
state 119 contains 1 shift/reduce conflicts.
state 120 contains 1 shift/reduce conflicts.
state 121 contains 1 shift/reduce conflicts.
state 122 contains 1 shift/reduce conflicts.
state 123 contains 1 shift/reduce conflicts.
state 124 contains 1 shift/reduce conflicts.
state 137 contains 1 shift/reduce conflicts.
state 139 contains 1 shift/reduce conflicts.
state 140 contains 1 shift/reduce conflicts.
state 141 contains 1 shift/reduce conflicts.
state 155 contains 1 shift/reduce conflicts.
state 156 contains 1 shift/reduce conflicts.
state 157 contains 1 shift/reduce conflicts.
state 158 contains 1 shift/reduce conflicts.
state 159 contains 1 shift/reduce conflicts.
state 160 contains 1 shift/reduce conflicts.
state 161 contains 1 shift/reduce conflicts.
state 162 contains 1 shift/reduce conflicts.
state 163 contains 1 shift/reduce conflicts.
state 164 contains 1 shift/reduce conflicts.
state 178 contains 1 shift/reduce conflicts.
state 193 contains 5 shift/reduce conflicts.
state 335 contains 1 shift/reduce conflicts.
state 342 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Double -> L_doubl                                  (1)
	Integer -> L_integ                                 (2)
	GateIdent -> L_GateIdent                           (3)
	Var -> L_Var                                       (4)
	Lambda -> L_Lambda                                 (5)
	Bit -> L_Bit                                       (6)
	Program -> ListFunctionDeclaration                 (7)
	Type3 -> 'Bit'                                     (8)
	Type3 -> 'Qbit'                                    (9)
	Type3 -> '()'                                      (10)
	Type3 -> '(' Type ')'                              (11)
	Type2 -> '!' Type3                                 (12)
	Type2 -> Type3                                     (13)
	Type1 -> Type2 '**' Integer                        (14)
	Type1 -> Type2 '*' Type1                           (15)
	Type1 -> Type2                                     (16)
	Type -> Type1 '->' Type                            (17)
	Type -> Type1                                      (18)
	Angle -> Double                                    (19)
	ControlState -> '@0'                               (20)
	ControlState -> '@1'                               (21)
	ControlState -> '@+'                               (22)
	ControlState -> '@-'                               (23)
	ControlState -> '@+i'                              (24)
	ControlState -> '@-i'                              (25)
	Control -> Term ControlState                       (26)
	ListControl -> Control                             (27)
	ListControl -> Control ',' ListControl             (28)
	Gate -> 'gate' 'H' Term                            (29)
	Gate -> 'gate' 'H' Term 'with-ctrl' '[' ListControl ']'   (30)
	Gate -> 'gate' 'X' Term                            (31)
	Gate -> 'gate' 'X' Term 'with-ctrl' '[' ListControl ']'   (32)
	Gate -> 'gate' 'Y' Term                            (33)
	Gate -> 'gate' 'Y' Term 'with-ctrl' '[' ListControl ']'   (34)
	Gate -> 'gate' 'Z' Term                            (35)
	Gate -> 'gate' 'Z' Term 'with-ctrl' '[' ListControl ']'   (36)
	Gate -> 'gate' 'ID' Term                           (37)
	Gate -> 'gate' 'ROOT_X' Integer Term               (38)
	Gate -> 'gate' 'ROOT_X' Integer Term 'with-ctrl' '[' ListControl ']'   (39)
	Gate -> 'gate' 'ROOT_X_DAG' Integer Term           (40)
	Gate -> 'gate' 'ROOT_X_DAG' Integer Term 'with-ctrl' '[' ListControl ']'   (41)
	Gate -> 'gate' 'ROOT_Y' Integer Term               (42)
	Gate -> 'gate' 'ROOT_Y' Integer Term 'with-ctrl' '[' ListControl ']'   (43)
	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term           (44)
	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term 'with-ctrl' '[' ListControl ']'   (45)
	Gate -> 'gate' 'ROOT_Z' Integer Term               (46)
	Gate -> 'gate' 'ROOT_Z' Integer Term 'with-ctrl' '[' ListControl ']'   (47)
	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term           (48)
	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term 'with-ctrl' '[' ListControl ']'   (49)
	Gate -> 'gate' 'S' Term                            (50)
	Gate -> 'gate' 'S' Term 'with-ctrl' '[' ListControl ']'   (51)
	Gate -> 'gate' 'S_DAG' Term                        (52)
	Gate -> 'gate' 'S_DAG' Term 'with-ctrl' '[' ListControl ']'   (53)
	Gate -> 'gate' 'T' Term                            (54)
	Gate -> 'gate' 'T' Term 'with-ctrl' '[' ListControl ']'   (55)
	Gate -> 'gate' 'T_DAG' Term                        (56)
	Gate -> 'gate' 'T_DAG' Term 'with-ctrl' '[' ListControl ']'   (57)
	Gate -> 'gate' 'SQRT_X' Term                       (58)
	Gate -> 'gate' 'SQRT_X' Term 'with-ctrl' '[' ListControl ']'   (59)
	Gate -> 'gate' 'SQRT_X_DAG' Term                   (60)
	Gate -> 'gate' 'SQRT_X_DAG' Term 'with-ctrl' '[' ListControl ']'   (61)
	Gate -> 'gate' 'SQRT_Y' Term                       (62)
	Gate -> 'gate' 'SQRT_Y' Term 'with-ctrl' '[' ListControl ']'   (63)
	Gate -> 'gate' 'SQRT_Y_DAG' Term                   (64)
	Gate -> 'gate' 'SQRT_Y_DAG' Term 'with-ctrl' '[' ListControl ']'   (65)
	Gate -> 'gate' 'RX' Angle Term                     (66)
	Gate -> 'gate' 'RX' Angle Term 'with-ctrl' '[' ListControl ']'   (67)
	Gate -> 'gate' 'RY' Angle Term                     (68)
	Gate -> 'gate' 'RY' Angle Term 'with-ctrl' '[' ListControl ']'   (69)
	Gate -> 'gate' 'RZ' Angle Term                     (70)
	Gate -> 'gate' 'RZ' Angle Term 'with-ctrl' '[' ListControl ']'   (71)
	Gate -> 'gate' 'U1' Angle Term                     (72)
	Gate -> 'gate' 'U1' Angle Term 'with-ctrl' '[' ListControl ']'   (73)
	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term   (74)
	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'   (75)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term   (76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'   (77)
	Gate -> 'gate' 'SWAP' Term                         (78)
	Gate -> 'gate' 'SWAP' Term 'with-ctrl' '[' ListControl ']'   (79)
	Gate -> 'gate' 'SQRT_SWAP' Term                    (80)
	Gate -> 'gate' 'SQRT_SWAP' Term 'with-ctrl' '[' ListControl ']'   (81)
	Gate -> 'gate' 'SQRT_SWAP_DAG' Term                (82)
	Gate -> 'gate' 'SQRT_SWAP_DAG' Term 'with-ctrl' '[' ListControl ']'   (83)
	Gate -> 'gate' 'ISWAP' Term                        (84)
	Gate -> 'gate' 'ISWAP' Term 'with-ctrl' '[' ListControl ']'   (85)
	Gate -> 'gate' 'FSWAP' Term                        (86)
	Gate -> 'gate' 'FSWAP' Term 'with-ctrl' '[' ListControl ']'   (87)
	Gate -> 'gate' 'SWAP_THETA' Term Angle             (88)
	Gate -> 'gate' 'SWAP_THETA' Angle Term 'with-ctrl' '[' ListControl ']'   (89)
	Gate -> 'gate' 'ROOT_SWAP' Term Integer            (90)
	Gate -> 'gate' 'ROOT_SWAP' Integer Term 'with-ctrl' '[' ListControl ']'   (91)
	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term        (92)
	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' '[' ListControl ']'   (93)
	Gate -> 'gate' GateIdent Term                      (94)
	Gate -> 'gate' GateIdent Term 'with-ctrl' '[' ListControl ']'   (95)
	LetVariable -> Var                                 (96)
	ListLetVariable -> LetVariable                     (97)
	ListLetVariable -> LetVariable ',' ListLetVariable   (98)
	LambdaVariable -> Var                              (99)
	ListLambdaVariable ->                              (100)
	ListLambdaVariable -> LambdaVariable ListLambdaVariable   (101)
	Tuple -> '(' Term ',' ListTerm ')'                 (102)
	ListTerm -> Term                                   (103)
	ListTerm -> Term ',' ListTerm                      (104)
	Term3 -> Var                                       (105)
	Term3 -> Bit                                       (106)
	Term3 -> Gate                                      (107)
	Term3 -> Tuple                                     (108)
	Term3 -> '()'                                      (109)
	Term3 -> '(' Term ')'                              (110)
	Term1 -> 'if' Term 'then' Term 'else' Term         (111)
	Term1 -> 'let' '{' LetVariable '=' Term '}' 'in' Term   (112)
	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' Term   (113)
	Term1 -> 'case' Term 'of' CaseExpression ListCaseExpression   (114)
	Term1 -> Lambda LambdaVariable ListLambdaVariable '->' Term   (115)
	Term1 -> Term2 '$' Term1                           (116)
	Term1 -> Term2                                     (117)
	Term2 -> Term2 Term3                               (118)
	Term2 -> Term3                                     (119)
	Term -> Term1                                      (120)
	CaseExpression -> Term '->' Var                    (121)
	ListCaseExpression -> CaseExpression               (122)
	ListCaseExpression -> CaseExpression ListCaseExpression   (123)
	Arg -> Var                                         (124)
	ListArg ->                                         (125)
	ListArg -> Arg ListArg                             (126)
	FunctionDefinition -> Var ListArg '=' Term         (127)
	FunctionDefinition -> FunctionDefinition ';'       (128)
	FunctionType -> Var '::' Type                      (129)
	FunctionType -> FunctionType ';'                   (130)
	FunctionDeclaration -> FunctionType ';' FunctionDefinition ';'   (131)
	ListFunctionDeclaration ->                         (132)
	ListFunctionDeclaration -> FunctionDeclaration ListFunctionDeclaration   (133)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'$'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	'()'           { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'**'           { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'->'           { PT _ (TS _ 9) }
	'::'           { PT _ (TS _ 10) }
	';'            { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'@+'           { PT _ (TS _ 13) }
	'@+i'          { PT _ (TS _ 14) }
	'@-'           { PT _ (TS _ 15) }
	'@-i'          { PT _ (TS _ 16) }
	'@0'           { PT _ (TS _ 17) }
	'@1'           { PT _ (TS _ 18) }
	'Bit'          { PT _ (TS _ 19) }
	'FSWAP'        { PT _ (TS _ 20) }
	'H'            { PT _ (TS _ 21) }
	'ID'           { PT _ (TS _ 22) }
	'ISWAP'        { PT _ (TS _ 23) }
	'Qbit'         { PT _ (TS _ 24) }
	'ROOT_SWAP'    { PT _ (TS _ 25) }
	'ROOT_SWAP_DAG'{ PT _ (TS _ 26) }
	'ROOT_X'       { PT _ (TS _ 27) }
	'ROOT_X_DAG'   { PT _ (TS _ 28) }
	'ROOT_Y'       { PT _ (TS _ 29) }
	'ROOT_Y_DAG'   { PT _ (TS _ 30) }
	'ROOT_Z'       { PT _ (TS _ 31) }
	'ROOT_Z_DAG'   { PT _ (TS _ 32) }
	'RX'           { PT _ (TS _ 33) }
	'RY'           { PT _ (TS _ 34) }
	'RZ'           { PT _ (TS _ 35) }
	'S'            { PT _ (TS _ 36) }
	'SQRT_SWAP'    { PT _ (TS _ 37) }
	'SQRT_SWAP_DAG'{ PT _ (TS _ 38) }
	'SQRT_X'       { PT _ (TS _ 39) }
	'SQRT_X_DAG'   { PT _ (TS _ 40) }
	'SQRT_Y'       { PT _ (TS _ 41) }
	'SQRT_Y_DAG'   { PT _ (TS _ 42) }
	'SWAP'         { PT _ (TS _ 43) }
	'SWAP_THETA'   { PT _ (TS _ 44) }
	'S_DAG'        { PT _ (TS _ 45) }
	'T'            { PT _ (TS _ 46) }
	'T_DAG'        { PT _ (TS _ 47) }
	'U1'           { PT _ (TS _ 48) }
	'U2'           { PT _ (TS _ 49) }
	'U3'           { PT _ (TS _ 50) }
	'X'            { PT _ (TS _ 51) }
	'Y'            { PT _ (TS _ 52) }
	'Z'            { PT _ (TS _ 53) }
	'['            { PT _ (TS _ 54) }
	']'            { PT _ (TS _ 55) }
	'case'         { PT _ (TS _ 56) }
	'else'         { PT _ (TS _ 57) }
	'gate'         { PT _ (TS _ 58) }
	'if'           { PT _ (TS _ 59) }
	'in'           { PT _ (TS _ 60) }
	'let'          { PT _ (TS _ 61) }
	'of'           { PT _ (TS _ 62) }
	'then'         { PT _ (TS _ 63) }
	'with-ctrl'    { PT _ (TS _ 64) }
	'{'            { PT _ (TS _ 65) }
	'}'            { PT _ (TS _ 66) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_GateIdent    { PT _ (T_GateIdent _) }
	L_Var          { PT _ (T_Var _) }
	L_Lambda       { PT _ (T_Lambda $$) }
	L_Bit          { PT _ (T_Bit _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Double          rule  1
	Integer         rule  2
	GateIdent       rule  3
	Var             rule  4
	Lambda          rule  5
	Bit             rule  6
	Program         rule  7
	Type3           rules 8, 9, 10, 11
	Type2           rules 12, 13
	Type1           rules 14, 15, 16
	Type            rules 17, 18
	Angle           rule  19
	ControlState    rules 20, 21, 22, 23, 24, 25
	Control         rule  26
	ListControl     rules 27, 28
	Gate            rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95
	LetVariable     rule  96
	ListLetVariable rules 97, 98
	LambdaVariable  rule  99
	ListLambdaVariable rules 100, 101
	Tuple           rule  102
	ListTerm        rules 103, 104
	Term3           rules 105, 106, 107, 108, 109, 110
	Term1           rules 111, 112, 113, 114, 115, 116, 117
	Term2           rules 118, 119
	Term            rule  120
	CaseExpression  rule  121
	ListCaseExpression rules 122, 123
	Arg             rule  124
	ListArg         rules 125, 126
	FunctionDefinition rules 127, 128
	FunctionType    rules 129, 130
	FunctionDeclaration rule  131
	ListFunctionDeclaration rules 132, 133

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	L_Var          shift, and enter state 8
	%eof           reduce using rule 132

	Var            goto state 3
	Program        goto state 4
	FunctionType   goto state 5
	FunctionDeclarationgoto state 6
	ListFunctionDeclarationgoto state 7

State 1

	Double -> . L_doubl                                 (rule 1)

	L_doubl        shift, and enter state 2


State 2

	Double -> L_doubl .                                 (rule 1)

	'$'            reduce using rule 1
	'('            reduce using rule 1
	'()'           reduce using rule 1
	')'            reduce using rule 1
	','            reduce using rule 1
	'->'           reduce using rule 1
	';'            reduce using rule 1
	'@+'           reduce using rule 1
	'@+i'          reduce using rule 1
	'@-'           reduce using rule 1
	'@-i'          reduce using rule 1
	'@0'           reduce using rule 1
	'@1'           reduce using rule 1
	'case'         reduce using rule 1
	'else'         reduce using rule 1
	'gate'         reduce using rule 1
	'if'           reduce using rule 1
	'let'          reduce using rule 1
	'of'           reduce using rule 1
	'then'         reduce using rule 1
	'with-ctrl'    reduce using rule 1
	'}'            reduce using rule 1
	L_doubl        reduce using rule 1
	L_integ        reduce using rule 1
	L_Var          reduce using rule 1
	L_Lambda       reduce using rule 1
	L_Bit          reduce using rule 1


State 3

	FunctionType -> Var . '::' Type                     (rule 129)

	'::'           shift, and enter state 11


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	FunctionType -> FunctionType . ';'                  (rule 130)
	FunctionDeclaration -> FunctionType . ';' FunctionDefinition ';'    (rule 131)

	';'            shift, and enter state 10


State 6

	ListFunctionDeclaration -> FunctionDeclaration . ListFunctionDeclaration    (rule 133)

	L_Var          shift, and enter state 8
	%eof           reduce using rule 132

	Var            goto state 3
	FunctionType   goto state 5
	FunctionDeclarationgoto state 6
	ListFunctionDeclarationgoto state 9

State 7

	Program -> ListFunctionDeclaration .                (rule 7)

	%eof           reduce using rule 7


State 8

	Var -> L_Var .                                      (rule 4)

	'$'            reduce using rule 4
	'('            reduce using rule 4
	'()'           reduce using rule 4
	')'            reduce using rule 4
	','            reduce using rule 4
	'->'           reduce using rule 4
	'::'           reduce using rule 4
	';'            reduce using rule 4
	'='            reduce using rule 4
	'@+'           reduce using rule 4
	'@+i'          reduce using rule 4
	'@-'           reduce using rule 4
	'@-i'          reduce using rule 4
	'@0'           reduce using rule 4
	'@1'           reduce using rule 4
	'case'         reduce using rule 4
	'else'         reduce using rule 4
	'gate'         reduce using rule 4
	'if'           reduce using rule 4
	'let'          reduce using rule 4
	'of'           reduce using rule 4
	'then'         reduce using rule 4
	'with-ctrl'    reduce using rule 4
	'}'            reduce using rule 4
	L_doubl        reduce using rule 4
	L_integ        reduce using rule 4
	L_Var          reduce using rule 4
	L_Lambda       reduce using rule 4
	L_Bit          reduce using rule 4


State 9

	ListFunctionDeclaration -> FunctionDeclaration ListFunctionDeclaration .    (rule 133)

	%eof           reduce using rule 133


State 10

	FunctionType -> FunctionType ';' .                  (rule 130)
	FunctionDeclaration -> FunctionType ';' . FunctionDefinition ';'    (rule 131)

	';'            reduce using rule 130
	L_Var          shift, and enter state 8

	Var            goto state 21
	FunctionDefinitiongoto state 22

State 11

	FunctionType -> Var '::' . Type                     (rule 129)

	'!'            shift, and enter state 16
	'('            shift, and enter state 17
	'()'           shift, and enter state 18
	'Bit'          shift, and enter state 19
	'Qbit'         shift, and enter state 20

	Type3          goto state 12
	Type2          goto state 13
	Type1          goto state 14
	Type           goto state 15

State 12

	Type2 -> Type3 .                                    (rule 13)

	')'            reduce using rule 13
	'*'            reduce using rule 13
	'**'           reduce using rule 13
	'->'           reduce using rule 13
	';'            reduce using rule 13


State 13

	Type1 -> Type2 . '**' Integer                       (rule 14)
	Type1 -> Type2 . '*' Type1                          (rule 15)
	Type1 -> Type2 .                                    (rule 16)

	')'            reduce using rule 16
	'*'            shift, and enter state 30
	'**'           shift, and enter state 31
	'->'           reduce using rule 16
	';'            reduce using rule 16


State 14

	Type -> Type1 . '->' Type                           (rule 17)
	Type -> Type1 .                                     (rule 18)

	')'            reduce using rule 18
	'->'           shift, and enter state 29
	';'            reduce using rule 18


State 15

	FunctionType -> Var '::' Type .                     (rule 129)

	';'            reduce using rule 129


State 16

	Type2 -> '!' . Type3                                (rule 12)

	'('            shift, and enter state 17
	'()'           shift, and enter state 18
	'Bit'          shift, and enter state 19
	'Qbit'         shift, and enter state 20

	Type3          goto state 28

State 17

	Type3 -> '(' . Type ')'                             (rule 11)

	'!'            shift, and enter state 16
	'('            shift, and enter state 17
	'()'           shift, and enter state 18
	'Bit'          shift, and enter state 19
	'Qbit'         shift, and enter state 20

	Type3          goto state 12
	Type2          goto state 13
	Type1          goto state 14
	Type           goto state 27

State 18

	Type3 -> '()' .                                     (rule 10)

	')'            reduce using rule 10
	'*'            reduce using rule 10
	'**'           reduce using rule 10
	'->'           reduce using rule 10
	';'            reduce using rule 10


State 19

	Type3 -> 'Bit' .                                    (rule 8)

	')'            reduce using rule 8
	'*'            reduce using rule 8
	'**'           reduce using rule 8
	'->'           reduce using rule 8
	';'            reduce using rule 8


State 20

	Type3 -> 'Qbit' .                                   (rule 9)

	')'            reduce using rule 9
	'*'            reduce using rule 9
	'**'           reduce using rule 9
	'->'           reduce using rule 9
	';'            reduce using rule 9


State 21

	FunctionDefinition -> Var . ListArg '=' Term        (rule 127)

	'='            reduce using rule 125
	L_Var          shift, and enter state 8

	Var            goto state 24
	Arg            goto state 25
	ListArg        goto state 26

State 22

	FunctionDefinition -> FunctionDefinition . ';'      (rule 128)
	FunctionDeclaration -> FunctionType ';' FunctionDefinition . ';'    (rule 131)

	';'            shift, and enter state 23


State 23

	FunctionDefinition -> FunctionDefinition ';' .      (rule 128)
	FunctionDeclaration -> FunctionType ';' FunctionDefinition ';' .    (rule 131)

	';'            reduce using rule 128
	L_Var          reduce using rule 131
	%eof           reduce using rule 131


State 24

	Arg -> Var .                                        (rule 124)

	'='            reduce using rule 124
	L_Var          reduce using rule 124


State 25

	ListArg -> Arg . ListArg                            (rule 126)

	'='            reduce using rule 125
	L_Var          shift, and enter state 8

	Var            goto state 24
	Arg            goto state 25
	ListArg        goto state 38

State 26

	FunctionDefinition -> Var ListArg . '=' Term        (rule 127)

	'='            shift, and enter state 37


State 27

	Type3 -> '(' Type . ')'                             (rule 11)

	')'            shift, and enter state 36


State 28

	Type2 -> '!' Type3 .                                (rule 12)

	')'            reduce using rule 12
	'*'            reduce using rule 12
	'**'           reduce using rule 12
	'->'           reduce using rule 12
	';'            reduce using rule 12


State 29

	Type -> Type1 '->' . Type                           (rule 17)

	'!'            shift, and enter state 16
	'('            shift, and enter state 17
	'()'           shift, and enter state 18
	'Bit'          shift, and enter state 19
	'Qbit'         shift, and enter state 20

	Type3          goto state 12
	Type2          goto state 13
	Type1          goto state 14
	Type           goto state 35

State 30

	Type1 -> Type2 '*' . Type1                          (rule 15)

	'!'            shift, and enter state 16
	'('            shift, and enter state 17
	'()'           shift, and enter state 18
	'Bit'          shift, and enter state 19
	'Qbit'         shift, and enter state 20

	Type3          goto state 12
	Type2          goto state 13
	Type1          goto state 34

State 31

	Type1 -> Type2 '**' . Integer                       (rule 14)

	L_integ        shift, and enter state 33

	Integer        goto state 32

State 32

	Type1 -> Type2 '**' Integer .                       (rule 14)

	')'            reduce using rule 14
	'->'           reduce using rule 14
	';'            reduce using rule 14


State 33

	Integer -> L_integ .                                (rule 2)

	'$'            reduce using rule 2
	'('            reduce using rule 2
	'()'           reduce using rule 2
	')'            reduce using rule 2
	','            reduce using rule 2
	'->'           reduce using rule 2
	';'            reduce using rule 2
	'@+'           reduce using rule 2
	'@+i'          reduce using rule 2
	'@-'           reduce using rule 2
	'@-i'          reduce using rule 2
	'@0'           reduce using rule 2
	'@1'           reduce using rule 2
	'case'         reduce using rule 2
	'else'         reduce using rule 2
	'gate'         reduce using rule 2
	'if'           reduce using rule 2
	'let'          reduce using rule 2
	'of'           reduce using rule 2
	'then'         reduce using rule 2
	'with-ctrl'    reduce using rule 2
	'}'            reduce using rule 2
	L_doubl        reduce using rule 2
	L_integ        reduce using rule 2
	L_Var          reduce using rule 2
	L_Lambda       reduce using rule 2
	L_Bit          reduce using rule 2


State 34

	Type1 -> Type2 '*' Type1 .                          (rule 15)

	')'            reduce using rule 15
	'->'           reduce using rule 15
	';'            reduce using rule 15


State 35

	Type -> Type1 '->' Type .                           (rule 17)

	')'            reduce using rule 17
	';'            reduce using rule 17


State 36

	Type3 -> '(' Type ')' .                             (rule 11)

	')'            reduce using rule 11
	'*'            reduce using rule 11
	'**'           reduce using rule 11
	'->'           reduce using rule 11
	';'            reduce using rule 11


State 37

	FunctionDefinition -> Var ListArg '=' . Term        (rule 127)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 47

State 38

	ListArg -> Arg ListArg .                            (rule 126)

	'='            reduce using rule 126


State 39

	Term3 -> Var .                                      (rule 105)

	'$'            reduce using rule 105
	'('            reduce using rule 105
	'()'           reduce using rule 105
	')'            reduce using rule 105
	','            reduce using rule 105
	'->'           reduce using rule 105
	';'            reduce using rule 105
	'@+'           reduce using rule 105
	'@+i'          reduce using rule 105
	'@-'           reduce using rule 105
	'@-i'          reduce using rule 105
	'@0'           reduce using rule 105
	'@1'           reduce using rule 105
	'else'         reduce using rule 105
	'gate'         reduce using rule 105
	'of'           reduce using rule 105
	'then'         reduce using rule 105
	'with-ctrl'    reduce using rule 105
	'}'            reduce using rule 105
	L_doubl        reduce using rule 105
	L_integ        reduce using rule 105
	L_Var          reduce using rule 105
	L_Bit          reduce using rule 105


State 40

	Term1 -> Lambda . LambdaVariable ListLambdaVariable '->' Term    (rule 115)

	L_Var          shift, and enter state 8

	Var            goto state 97
	LambdaVariable goto state 98

State 41

	Term3 -> Bit .                                      (rule 106)

	'$'            reduce using rule 106
	'('            reduce using rule 106
	'()'           reduce using rule 106
	')'            reduce using rule 106
	','            reduce using rule 106
	'->'           reduce using rule 106
	';'            reduce using rule 106
	'@+'           reduce using rule 106
	'@+i'          reduce using rule 106
	'@-'           reduce using rule 106
	'@-i'          reduce using rule 106
	'@0'           reduce using rule 106
	'@1'           reduce using rule 106
	'else'         reduce using rule 106
	'gate'         reduce using rule 106
	'of'           reduce using rule 106
	'then'         reduce using rule 106
	'with-ctrl'    reduce using rule 106
	'}'            reduce using rule 106
	L_doubl        reduce using rule 106
	L_integ        reduce using rule 106
	L_Var          reduce using rule 106
	L_Bit          reduce using rule 106


State 42

	Term3 -> Gate .                                     (rule 107)

	'$'            reduce using rule 107
	'('            reduce using rule 107
	'()'           reduce using rule 107
	')'            reduce using rule 107
	','            reduce using rule 107
	'->'           reduce using rule 107
	';'            reduce using rule 107
	'@+'           reduce using rule 107
	'@+i'          reduce using rule 107
	'@-'           reduce using rule 107
	'@-i'          reduce using rule 107
	'@0'           reduce using rule 107
	'@1'           reduce using rule 107
	'else'         reduce using rule 107
	'gate'         reduce using rule 107
	'of'           reduce using rule 107
	'then'         reduce using rule 107
	'with-ctrl'    reduce using rule 107
	'}'            reduce using rule 107
	L_doubl        reduce using rule 107
	L_integ        reduce using rule 107
	L_Var          reduce using rule 107
	L_Bit          reduce using rule 107


State 43

	Term3 -> Tuple .                                    (rule 108)

	'$'            reduce using rule 108
	'('            reduce using rule 108
	'()'           reduce using rule 108
	')'            reduce using rule 108
	','            reduce using rule 108
	'->'           reduce using rule 108
	';'            reduce using rule 108
	'@+'           reduce using rule 108
	'@+i'          reduce using rule 108
	'@-'           reduce using rule 108
	'@-i'          reduce using rule 108
	'@0'           reduce using rule 108
	'@1'           reduce using rule 108
	'else'         reduce using rule 108
	'gate'         reduce using rule 108
	'of'           reduce using rule 108
	'then'         reduce using rule 108
	'with-ctrl'    reduce using rule 108
	'}'            reduce using rule 108
	L_doubl        reduce using rule 108
	L_integ        reduce using rule 108
	L_Var          reduce using rule 108
	L_Bit          reduce using rule 108


State 44

	Term2 -> Term3 .                                    (rule 119)

	'$'            reduce using rule 119
	'('            reduce using rule 119
	'()'           reduce using rule 119
	')'            reduce using rule 119
	','            reduce using rule 119
	'->'           reduce using rule 119
	';'            reduce using rule 119
	'@+'           reduce using rule 119
	'@+i'          reduce using rule 119
	'@-'           reduce using rule 119
	'@-i'          reduce using rule 119
	'@0'           reduce using rule 119
	'@1'           reduce using rule 119
	'else'         reduce using rule 119
	'gate'         reduce using rule 119
	'of'           reduce using rule 119
	'then'         reduce using rule 119
	'with-ctrl'    reduce using rule 119
	'}'            reduce using rule 119
	L_doubl        reduce using rule 119
	L_integ        reduce using rule 119
	L_Var          reduce using rule 119
	L_Bit          reduce using rule 119


State 45

	Term -> Term1 .                                     (rule 120)

	'$'            reduce using rule 120
	'('            reduce using rule 120
	'()'           reduce using rule 120
	')'            reduce using rule 120
	','            reduce using rule 120
	'->'           reduce using rule 120
	';'            reduce using rule 120
	'@+'           reduce using rule 120
	'@+i'          reduce using rule 120
	'@-'           reduce using rule 120
	'@-i'          reduce using rule 120
	'@0'           reduce using rule 120
	'@1'           reduce using rule 120
	'else'         reduce using rule 120
	'gate'         reduce using rule 120
	'of'           reduce using rule 120
	'then'         reduce using rule 120
	'with-ctrl'    reduce using rule 120
	'}'            reduce using rule 120
	L_doubl        reduce using rule 120
	L_integ        reduce using rule 120
	L_Var          reduce using rule 120
	L_Bit          reduce using rule 120


State 46

	Term1 -> Term2 . '$' Term1                          (rule 116)
	Term1 -> Term2 .                                    (rule 117)
	Term2 -> Term2 . Term3                              (rule 118)

	'$'            shift, and enter state 96
			(reduce using rule 117)

	'('            shift, and enter state 48
			(reduce using rule 117)

	'()'           shift, and enter state 49
			(reduce using rule 117)

	')'            reduce using rule 117
	','            reduce using rule 117
	'->'           reduce using rule 117
	';'            reduce using rule 117
	'@+'           reduce using rule 117
	'@+i'          reduce using rule 117
	'@-'           reduce using rule 117
	'@-i'          reduce using rule 117
	'@0'           reduce using rule 117
	'@1'           reduce using rule 117
	'else'         reduce using rule 117
	'gate'         shift, and enter state 51
			(reduce using rule 117)

	'of'           reduce using rule 117
	'then'         reduce using rule 117
	'with-ctrl'    reduce using rule 117
	'}'            reduce using rule 117
	L_doubl        reduce using rule 117
	L_integ        reduce using rule 117
	L_Var          shift, and enter state 8
			(reduce using rule 117)

	L_Bit          shift, and enter state 55
			(reduce using rule 117)


	Var            goto state 39
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 95

State 47

	FunctionDefinition -> Var ListArg '=' Term .        (rule 127)

	';'            reduce using rule 127


State 48

	Tuple -> '(' . Term ',' ListTerm ')'                (rule 102)
	Term3 -> '(' . Term ')'                             (rule 110)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 94

State 49

	Term3 -> '()' .                                     (rule 109)

	'$'            reduce using rule 109
	'('            reduce using rule 109
	'()'           reduce using rule 109
	')'            reduce using rule 109
	','            reduce using rule 109
	'->'           reduce using rule 109
	';'            reduce using rule 109
	'@+'           reduce using rule 109
	'@+i'          reduce using rule 109
	'@-'           reduce using rule 109
	'@-i'          reduce using rule 109
	'@0'           reduce using rule 109
	'@1'           reduce using rule 109
	'else'         reduce using rule 109
	'gate'         reduce using rule 109
	'of'           reduce using rule 109
	'then'         reduce using rule 109
	'with-ctrl'    reduce using rule 109
	'}'            reduce using rule 109
	L_doubl        reduce using rule 109
	L_integ        reduce using rule 109
	L_Var          reduce using rule 109
	L_Bit          reduce using rule 109


State 50

	Term1 -> 'case' . Term 'of' CaseExpression ListCaseExpression    (rule 114)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 93

State 51

	Gate -> 'gate' . 'H' Term                           (rule 29)
	Gate -> 'gate' . 'H' Term 'with-ctrl' '[' ListControl ']'    (rule 30)
	Gate -> 'gate' . 'X' Term                           (rule 31)
	Gate -> 'gate' . 'X' Term 'with-ctrl' '[' ListControl ']'    (rule 32)
	Gate -> 'gate' . 'Y' Term                           (rule 33)
	Gate -> 'gate' . 'Y' Term 'with-ctrl' '[' ListControl ']'    (rule 34)
	Gate -> 'gate' . 'Z' Term                           (rule 35)
	Gate -> 'gate' . 'Z' Term 'with-ctrl' '[' ListControl ']'    (rule 36)
	Gate -> 'gate' . 'ID' Term                          (rule 37)
	Gate -> 'gate' . 'ROOT_X' Integer Term              (rule 38)
	Gate -> 'gate' . 'ROOT_X' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 39)
	Gate -> 'gate' . 'ROOT_X_DAG' Integer Term          (rule 40)
	Gate -> 'gate' . 'ROOT_X_DAG' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 41)
	Gate -> 'gate' . 'ROOT_Y' Integer Term              (rule 42)
	Gate -> 'gate' . 'ROOT_Y' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 43)
	Gate -> 'gate' . 'ROOT_Y_DAG' Integer Term          (rule 44)
	Gate -> 'gate' . 'ROOT_Y_DAG' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 45)
	Gate -> 'gate' . 'ROOT_Z' Integer Term              (rule 46)
	Gate -> 'gate' . 'ROOT_Z' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 47)
	Gate -> 'gate' . 'ROOT_Z_DAG' Integer Term          (rule 48)
	Gate -> 'gate' . 'ROOT_Z_DAG' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 49)
	Gate -> 'gate' . 'S' Term                           (rule 50)
	Gate -> 'gate' . 'S' Term 'with-ctrl' '[' ListControl ']'    (rule 51)
	Gate -> 'gate' . 'S_DAG' Term                       (rule 52)
	Gate -> 'gate' . 'S_DAG' Term 'with-ctrl' '[' ListControl ']'    (rule 53)
	Gate -> 'gate' . 'T' Term                           (rule 54)
	Gate -> 'gate' . 'T' Term 'with-ctrl' '[' ListControl ']'    (rule 55)
	Gate -> 'gate' . 'T_DAG' Term                       (rule 56)
	Gate -> 'gate' . 'T_DAG' Term 'with-ctrl' '[' ListControl ']'    (rule 57)
	Gate -> 'gate' . 'SQRT_X' Term                      (rule 58)
	Gate -> 'gate' . 'SQRT_X' Term 'with-ctrl' '[' ListControl ']'    (rule 59)
	Gate -> 'gate' . 'SQRT_X_DAG' Term                  (rule 60)
	Gate -> 'gate' . 'SQRT_X_DAG' Term 'with-ctrl' '[' ListControl ']'    (rule 61)
	Gate -> 'gate' . 'SQRT_Y' Term                      (rule 62)
	Gate -> 'gate' . 'SQRT_Y' Term 'with-ctrl' '[' ListControl ']'    (rule 63)
	Gate -> 'gate' . 'SQRT_Y_DAG' Term                  (rule 64)
	Gate -> 'gate' . 'SQRT_Y_DAG' Term 'with-ctrl' '[' ListControl ']'    (rule 65)
	Gate -> 'gate' . 'RX' Angle Term                    (rule 66)
	Gate -> 'gate' . 'RX' Angle Term 'with-ctrl' '[' ListControl ']'    (rule 67)
	Gate -> 'gate' . 'RY' Angle Term                    (rule 68)
	Gate -> 'gate' . 'RY' Angle Term 'with-ctrl' '[' ListControl ']'    (rule 69)
	Gate -> 'gate' . 'RZ' Angle Term                    (rule 70)
	Gate -> 'gate' . 'RZ' Angle Term 'with-ctrl' '[' ListControl ']'    (rule 71)
	Gate -> 'gate' . 'U1' Angle Term                    (rule 72)
	Gate -> 'gate' . 'U1' Angle Term 'with-ctrl' '[' ListControl ']'    (rule 73)
	Gate -> 'gate' . 'U2' '(' Angle ',' Angle ')' Term    (rule 74)
	Gate -> 'gate' . 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)
	Gate -> 'gate' . 'U3' '(' Angle ',' Angle ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' . 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)
	Gate -> 'gate' . 'SWAP' Term                        (rule 78)
	Gate -> 'gate' . 'SWAP' Term 'with-ctrl' '[' ListControl ']'    (rule 79)
	Gate -> 'gate' . 'SQRT_SWAP' Term                   (rule 80)
	Gate -> 'gate' . 'SQRT_SWAP' Term 'with-ctrl' '[' ListControl ']'    (rule 81)
	Gate -> 'gate' . 'SQRT_SWAP_DAG' Term               (rule 82)
	Gate -> 'gate' . 'SQRT_SWAP_DAG' Term 'with-ctrl' '[' ListControl ']'    (rule 83)
	Gate -> 'gate' . 'ISWAP' Term                       (rule 84)
	Gate -> 'gate' . 'ISWAP' Term 'with-ctrl' '[' ListControl ']'    (rule 85)
	Gate -> 'gate' . 'FSWAP' Term                       (rule 86)
	Gate -> 'gate' . 'FSWAP' Term 'with-ctrl' '[' ListControl ']'    (rule 87)
	Gate -> 'gate' . 'SWAP_THETA' Term Angle            (rule 88)
	Gate -> 'gate' . 'SWAP_THETA' Angle Term 'with-ctrl' '[' ListControl ']'    (rule 89)
	Gate -> 'gate' . 'ROOT_SWAP' Term Integer           (rule 90)
	Gate -> 'gate' . 'ROOT_SWAP' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 91)
	Gate -> 'gate' . 'ROOT_SWAP_DAG' Integer Term       (rule 92)
	Gate -> 'gate' . 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' '[' ListControl ']'    (rule 93)
	Gate -> 'gate' . GateIdent Term                     (rule 94)
	Gate -> 'gate' . GateIdent Term 'with-ctrl' '[' ListControl ']'    (rule 95)

	'FSWAP'        shift, and enter state 59
	'H'            shift, and enter state 60
	'ID'           shift, and enter state 61
	'ISWAP'        shift, and enter state 62
	'ROOT_SWAP'    shift, and enter state 63
	'ROOT_SWAP_DAG'shift, and enter state 64
	'ROOT_X'       shift, and enter state 65
	'ROOT_X_DAG'   shift, and enter state 66
	'ROOT_Y'       shift, and enter state 67
	'ROOT_Y_DAG'   shift, and enter state 68
	'ROOT_Z'       shift, and enter state 69
	'ROOT_Z_DAG'   shift, and enter state 70
	'RX'           shift, and enter state 71
	'RY'           shift, and enter state 72
	'RZ'           shift, and enter state 73
	'S'            shift, and enter state 74
	'SQRT_SWAP'    shift, and enter state 75
	'SQRT_SWAP_DAG'shift, and enter state 76
	'SQRT_X'       shift, and enter state 77
	'SQRT_X_DAG'   shift, and enter state 78
	'SQRT_Y'       shift, and enter state 79
	'SQRT_Y_DAG'   shift, and enter state 80
	'SWAP'         shift, and enter state 81
	'SWAP_THETA'   shift, and enter state 82
	'S_DAG'        shift, and enter state 83
	'T'            shift, and enter state 84
	'T_DAG'        shift, and enter state 85
	'U1'           shift, and enter state 86
	'U2'           shift, and enter state 87
	'U3'           shift, and enter state 88
	'X'            shift, and enter state 89
	'Y'            shift, and enter state 90
	'Z'            shift, and enter state 91
	L_GateIdent    shift, and enter state 92

	GateIdent      goto state 58

State 52

	Term1 -> 'if' . Term 'then' Term 'else' Term        (rule 111)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 57

State 53

	Term1 -> 'let' . '{' LetVariable '=' Term '}' 'in' Term    (rule 112)
	Term1 -> 'let' . '{' '(' LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' Term    (rule 113)

	'{'            shift, and enter state 56


State 54

	Lambda -> L_Lambda .                                (rule 5)

	L_Var          reduce using rule 5


State 55

	Bit -> L_Bit .                                      (rule 6)

	'$'            reduce using rule 6
	'('            reduce using rule 6
	'()'           reduce using rule 6
	')'            reduce using rule 6
	','            reduce using rule 6
	'->'           reduce using rule 6
	';'            reduce using rule 6
	'@+'           reduce using rule 6
	'@+i'          reduce using rule 6
	'@-'           reduce using rule 6
	'@-i'          reduce using rule 6
	'@0'           reduce using rule 6
	'@1'           reduce using rule 6
	'else'         reduce using rule 6
	'gate'         reduce using rule 6
	'of'           reduce using rule 6
	'then'         reduce using rule 6
	'with-ctrl'    reduce using rule 6
	'}'            reduce using rule 6
	L_doubl        reduce using rule 6
	L_integ        reduce using rule 6
	L_Var          reduce using rule 6
	L_Bit          reduce using rule 6


State 56

	Term1 -> 'let' '{' . LetVariable '=' Term '}' 'in' Term    (rule 112)
	Term1 -> 'let' '{' . '(' LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' Term    (rule 113)

	'('            shift, and enter state 145
	L_Var          shift, and enter state 8

	Var            goto state 143
	LetVariable    goto state 144

State 57

	Term1 -> 'if' Term . 'then' Term 'else' Term        (rule 111)

	'then'         shift, and enter state 142


State 58

	Gate -> 'gate' GateIdent . Term                     (rule 94)
	Gate -> 'gate' GateIdent . Term 'with-ctrl' '[' ListControl ']'    (rule 95)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 141

State 59

	Gate -> 'gate' 'FSWAP' . Term                       (rule 86)
	Gate -> 'gate' 'FSWAP' . Term 'with-ctrl' '[' ListControl ']'    (rule 87)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 140

State 60

	Gate -> 'gate' 'H' . Term                           (rule 29)
	Gate -> 'gate' 'H' . Term 'with-ctrl' '[' ListControl ']'    (rule 30)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 139

State 61

	Gate -> 'gate' 'ID' . Term                          (rule 37)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 138

State 62

	Gate -> 'gate' 'ISWAP' . Term                       (rule 84)
	Gate -> 'gate' 'ISWAP' . Term 'with-ctrl' '[' ListControl ']'    (rule 85)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 137

State 63

	Gate -> 'gate' 'ROOT_SWAP' . Term Integer           (rule 90)
	Gate -> 'gate' 'ROOT_SWAP' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 91)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_integ        shift, and enter state 33
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Integer        goto state 135
	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 136

State 64

	Gate -> 'gate' 'ROOT_SWAP_DAG' . Integer Term       (rule 92)
	Gate -> 'gate' 'ROOT_SWAP_DAG' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 93)

	L_integ        shift, and enter state 33

	Integer        goto state 134

State 65

	Gate -> 'gate' 'ROOT_X' . Integer Term              (rule 38)
	Gate -> 'gate' 'ROOT_X' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 39)

	L_integ        shift, and enter state 33

	Integer        goto state 133

State 66

	Gate -> 'gate' 'ROOT_X_DAG' . Integer Term          (rule 40)
	Gate -> 'gate' 'ROOT_X_DAG' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 41)

	L_integ        shift, and enter state 33

	Integer        goto state 132

State 67

	Gate -> 'gate' 'ROOT_Y' . Integer Term              (rule 42)
	Gate -> 'gate' 'ROOT_Y' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 43)

	L_integ        shift, and enter state 33

	Integer        goto state 131

State 68

	Gate -> 'gate' 'ROOT_Y_DAG' . Integer Term          (rule 44)
	Gate -> 'gate' 'ROOT_Y_DAG' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 45)

	L_integ        shift, and enter state 33

	Integer        goto state 130

State 69

	Gate -> 'gate' 'ROOT_Z' . Integer Term              (rule 46)
	Gate -> 'gate' 'ROOT_Z' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 47)

	L_integ        shift, and enter state 33

	Integer        goto state 129

State 70

	Gate -> 'gate' 'ROOT_Z_DAG' . Integer Term          (rule 48)
	Gate -> 'gate' 'ROOT_Z_DAG' . Integer Term 'with-ctrl' '[' ListControl ']'    (rule 49)

	L_integ        shift, and enter state 33

	Integer        goto state 128

State 71

	Gate -> 'gate' 'RX' . Angle Term                    (rule 66)
	Gate -> 'gate' 'RX' . Angle Term 'with-ctrl' '[' ListControl ']'    (rule 67)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 127

State 72

	Gate -> 'gate' 'RY' . Angle Term                    (rule 68)
	Gate -> 'gate' 'RY' . Angle Term 'with-ctrl' '[' ListControl ']'    (rule 69)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 126

State 73

	Gate -> 'gate' 'RZ' . Angle Term                    (rule 70)
	Gate -> 'gate' 'RZ' . Angle Term 'with-ctrl' '[' ListControl ']'    (rule 71)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 125

State 74

	Gate -> 'gate' 'S' . Term                           (rule 50)
	Gate -> 'gate' 'S' . Term 'with-ctrl' '[' ListControl ']'    (rule 51)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 124

State 75

	Gate -> 'gate' 'SQRT_SWAP' . Term                   (rule 80)
	Gate -> 'gate' 'SQRT_SWAP' . Term 'with-ctrl' '[' ListControl ']'    (rule 81)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 123

State 76

	Gate -> 'gate' 'SQRT_SWAP_DAG' . Term               (rule 82)
	Gate -> 'gate' 'SQRT_SWAP_DAG' . Term 'with-ctrl' '[' ListControl ']'    (rule 83)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 122

State 77

	Gate -> 'gate' 'SQRT_X' . Term                      (rule 58)
	Gate -> 'gate' 'SQRT_X' . Term 'with-ctrl' '[' ListControl ']'    (rule 59)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 121

State 78

	Gate -> 'gate' 'SQRT_X_DAG' . Term                  (rule 60)
	Gate -> 'gate' 'SQRT_X_DAG' . Term 'with-ctrl' '[' ListControl ']'    (rule 61)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 120

State 79

	Gate -> 'gate' 'SQRT_Y' . Term                      (rule 62)
	Gate -> 'gate' 'SQRT_Y' . Term 'with-ctrl' '[' ListControl ']'    (rule 63)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 119

State 80

	Gate -> 'gate' 'SQRT_Y_DAG' . Term                  (rule 64)
	Gate -> 'gate' 'SQRT_Y_DAG' . Term 'with-ctrl' '[' ListControl ']'    (rule 65)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 118

State 81

	Gate -> 'gate' 'SWAP' . Term                        (rule 78)
	Gate -> 'gate' 'SWAP' . Term 'with-ctrl' '[' ListControl ']'    (rule 79)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 117

State 82

	Gate -> 'gate' 'SWAP_THETA' . Term Angle            (rule 88)
	Gate -> 'gate' 'SWAP_THETA' . Angle Term 'with-ctrl' '[' ListControl ']'    (rule 89)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_doubl        shift, and enter state 2
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Double         goto state 110
	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Angle          goto state 115
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 116

State 83

	Gate -> 'gate' 'S_DAG' . Term                       (rule 52)
	Gate -> 'gate' 'S_DAG' . Term 'with-ctrl' '[' ListControl ']'    (rule 53)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 114

State 84

	Gate -> 'gate' 'T' . Term                           (rule 54)
	Gate -> 'gate' 'T' . Term 'with-ctrl' '[' ListControl ']'    (rule 55)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 113

State 85

	Gate -> 'gate' 'T_DAG' . Term                       (rule 56)
	Gate -> 'gate' 'T_DAG' . Term 'with-ctrl' '[' ListControl ']'    (rule 57)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 112

State 86

	Gate -> 'gate' 'U1' . Angle Term                    (rule 72)
	Gate -> 'gate' 'U1' . Angle Term 'with-ctrl' '[' ListControl ']'    (rule 73)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 111

State 87

	Gate -> 'gate' 'U2' . '(' Angle ',' Angle ')' Term    (rule 74)
	Gate -> 'gate' 'U2' . '(' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	'('            shift, and enter state 109


State 88

	Gate -> 'gate' 'U3' . '(' Angle ',' Angle ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' . '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	'('            shift, and enter state 108


State 89

	Gate -> 'gate' 'X' . Term                           (rule 31)
	Gate -> 'gate' 'X' . Term 'with-ctrl' '[' ListControl ']'    (rule 32)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 107

State 90

	Gate -> 'gate' 'Y' . Term                           (rule 33)
	Gate -> 'gate' 'Y' . Term 'with-ctrl' '[' ListControl ']'    (rule 34)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 106

State 91

	Gate -> 'gate' 'Z' . Term                           (rule 35)
	Gate -> 'gate' 'Z' . Term 'with-ctrl' '[' ListControl ']'    (rule 36)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 105

State 92

	GateIdent -> L_GateIdent .                          (rule 3)

	'('            reduce using rule 3
	'()'           reduce using rule 3
	'case'         reduce using rule 3
	'gate'         reduce using rule 3
	'if'           reduce using rule 3
	'let'          reduce using rule 3
	L_Var          reduce using rule 3
	L_Lambda       reduce using rule 3
	L_Bit          reduce using rule 3


State 93

	Term1 -> 'case' Term . 'of' CaseExpression ListCaseExpression    (rule 114)

	'of'           shift, and enter state 104


State 94

	Tuple -> '(' Term . ',' ListTerm ')'                (rule 102)
	Term3 -> '(' Term . ')'                             (rule 110)

	')'            shift, and enter state 102
	','            shift, and enter state 103


State 95

	Term2 -> Term2 Term3 .                              (rule 118)

	'$'            reduce using rule 118
	'('            reduce using rule 118
	'()'           reduce using rule 118
	')'            reduce using rule 118
	','            reduce using rule 118
	'->'           reduce using rule 118
	';'            reduce using rule 118
	'@+'           reduce using rule 118
	'@+i'          reduce using rule 118
	'@-'           reduce using rule 118
	'@-i'          reduce using rule 118
	'@0'           reduce using rule 118
	'@1'           reduce using rule 118
	'else'         reduce using rule 118
	'gate'         reduce using rule 118
	'of'           reduce using rule 118
	'then'         reduce using rule 118
	'with-ctrl'    reduce using rule 118
	'}'            reduce using rule 118
	L_doubl        reduce using rule 118
	L_integ        reduce using rule 118
	L_Var          reduce using rule 118
	L_Bit          reduce using rule 118


State 96

	Term1 -> Term2 '$' . Term1                          (rule 116)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 101
	Term2          goto state 46

State 97

	LambdaVariable -> Var .                             (rule 99)

	'->'           reduce using rule 99
	L_Var          reduce using rule 99


State 98

	Term1 -> Lambda LambdaVariable . ListLambdaVariable '->' Term    (rule 115)

	'->'           reduce using rule 100
	L_Var          shift, and enter state 8

	Var            goto state 97
	LambdaVariable goto state 99
	ListLambdaVariablegoto state 100

State 99

	ListLambdaVariable -> LambdaVariable . ListLambdaVariable    (rule 101)

	'->'           reduce using rule 100
	L_Var          shift, and enter state 8

	Var            goto state 97
	LambdaVariable goto state 99
	ListLambdaVariablegoto state 189

State 100

	Term1 -> Lambda LambdaVariable ListLambdaVariable . '->' Term    (rule 115)

	'->'           shift, and enter state 188


State 101

	Term1 -> Term2 '$' Term1 .                          (rule 116)

	'$'            reduce using rule 116
	'('            reduce using rule 116
	'()'           reduce using rule 116
	')'            reduce using rule 116
	','            reduce using rule 116
	'->'           reduce using rule 116
	';'            reduce using rule 116
	'@+'           reduce using rule 116
	'@+i'          reduce using rule 116
	'@-'           reduce using rule 116
	'@-i'          reduce using rule 116
	'@0'           reduce using rule 116
	'@1'           reduce using rule 116
	'else'         reduce using rule 116
	'gate'         reduce using rule 116
	'of'           reduce using rule 116
	'then'         reduce using rule 116
	'with-ctrl'    reduce using rule 116
	'}'            reduce using rule 116
	L_doubl        reduce using rule 116
	L_integ        reduce using rule 116
	L_Var          reduce using rule 116
	L_Bit          reduce using rule 116


State 102

	Term3 -> '(' Term ')' .                             (rule 110)

	'$'            reduce using rule 110
	'('            reduce using rule 110
	'()'           reduce using rule 110
	')'            reduce using rule 110
	','            reduce using rule 110
	'->'           reduce using rule 110
	';'            reduce using rule 110
	'@+'           reduce using rule 110
	'@+i'          reduce using rule 110
	'@-'           reduce using rule 110
	'@-i'          reduce using rule 110
	'@0'           reduce using rule 110
	'@1'           reduce using rule 110
	'else'         reduce using rule 110
	'gate'         reduce using rule 110
	'of'           reduce using rule 110
	'then'         reduce using rule 110
	'with-ctrl'    reduce using rule 110
	'}'            reduce using rule 110
	L_doubl        reduce using rule 110
	L_integ        reduce using rule 110
	L_Var          reduce using rule 110
	L_Bit          reduce using rule 110


State 103

	Tuple -> '(' Term ',' . ListTerm ')'                (rule 102)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	ListTerm       goto state 186
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 187

State 104

	Term1 -> 'case' Term 'of' . CaseExpression ListCaseExpression    (rule 114)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 184
	CaseExpression goto state 185

State 105

	Gate -> 'gate' 'Z' Term .                           (rule 35)
	Gate -> 'gate' 'Z' Term . 'with-ctrl' '[' ListControl ']'    (rule 36)

	'$'            reduce using rule 35
	'('            reduce using rule 35
	'()'           reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	'->'           reduce using rule 35
	';'            reduce using rule 35
	'@+'           reduce using rule 35
	'@+i'          reduce using rule 35
	'@-'           reduce using rule 35
	'@-i'          reduce using rule 35
	'@0'           reduce using rule 35
	'@1'           reduce using rule 35
	'else'         reduce using rule 35
	'gate'         reduce using rule 35
	'of'           reduce using rule 35
	'then'         reduce using rule 35
	'with-ctrl'    shift, and enter state 183
			(reduce using rule 35)

	'}'            reduce using rule 35
	L_doubl        reduce using rule 35
	L_integ        reduce using rule 35
	L_Var          reduce using rule 35
	L_Bit          reduce using rule 35


State 106

	Gate -> 'gate' 'Y' Term .                           (rule 33)
	Gate -> 'gate' 'Y' Term . 'with-ctrl' '[' ListControl ']'    (rule 34)

	'$'            reduce using rule 33
	'('            reduce using rule 33
	'()'           reduce using rule 33
	')'            reduce using rule 33
	','            reduce using rule 33
	'->'           reduce using rule 33
	';'            reduce using rule 33
	'@+'           reduce using rule 33
	'@+i'          reduce using rule 33
	'@-'           reduce using rule 33
	'@-i'          reduce using rule 33
	'@0'           reduce using rule 33
	'@1'           reduce using rule 33
	'else'         reduce using rule 33
	'gate'         reduce using rule 33
	'of'           reduce using rule 33
	'then'         reduce using rule 33
	'with-ctrl'    shift, and enter state 182
			(reduce using rule 33)

	'}'            reduce using rule 33
	L_doubl        reduce using rule 33
	L_integ        reduce using rule 33
	L_Var          reduce using rule 33
	L_Bit          reduce using rule 33


State 107

	Gate -> 'gate' 'X' Term .                           (rule 31)
	Gate -> 'gate' 'X' Term . 'with-ctrl' '[' ListControl ']'    (rule 32)

	'$'            reduce using rule 31
	'('            reduce using rule 31
	'()'           reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	'->'           reduce using rule 31
	';'            reduce using rule 31
	'@+'           reduce using rule 31
	'@+i'          reduce using rule 31
	'@-'           reduce using rule 31
	'@-i'          reduce using rule 31
	'@0'           reduce using rule 31
	'@1'           reduce using rule 31
	'else'         reduce using rule 31
	'gate'         reduce using rule 31
	'of'           reduce using rule 31
	'then'         reduce using rule 31
	'with-ctrl'    shift, and enter state 181
			(reduce using rule 31)

	'}'            reduce using rule 31
	L_doubl        reduce using rule 31
	L_integ        reduce using rule 31
	L_Var          reduce using rule 31
	L_Bit          reduce using rule 31


State 108

	Gate -> 'gate' 'U3' '(' . Angle ',' Angle ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' . Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 180

State 109

	Gate -> 'gate' 'U2' '(' . Angle ',' Angle ')' Term    (rule 74)
	Gate -> 'gate' 'U2' '(' . Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 179

State 110

	Angle -> Double .                                   (rule 19)

	'$'            reduce using rule 19
	'('            reduce using rule 19
	'()'           reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'->'           reduce using rule 19
	';'            reduce using rule 19
	'@+'           reduce using rule 19
	'@+i'          reduce using rule 19
	'@-'           reduce using rule 19
	'@-i'          reduce using rule 19
	'@0'           reduce using rule 19
	'@1'           reduce using rule 19
	'case'         reduce using rule 19
	'else'         reduce using rule 19
	'gate'         reduce using rule 19
	'if'           reduce using rule 19
	'let'          reduce using rule 19
	'of'           reduce using rule 19
	'then'         reduce using rule 19
	'with-ctrl'    reduce using rule 19
	'}'            reduce using rule 19
	L_doubl        reduce using rule 19
	L_integ        reduce using rule 19
	L_Var          reduce using rule 19
	L_Lambda       reduce using rule 19
	L_Bit          reduce using rule 19


State 111

	Gate -> 'gate' 'U1' Angle . Term                    (rule 72)
	Gate -> 'gate' 'U1' Angle . Term 'with-ctrl' '[' ListControl ']'    (rule 73)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 178

State 112

	Gate -> 'gate' 'T_DAG' Term .                       (rule 56)
	Gate -> 'gate' 'T_DAG' Term . 'with-ctrl' '[' ListControl ']'    (rule 57)

	'$'            reduce using rule 56
	'('            reduce using rule 56
	'()'           reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	'->'           reduce using rule 56
	';'            reduce using rule 56
	'@+'           reduce using rule 56
	'@+i'          reduce using rule 56
	'@-'           reduce using rule 56
	'@-i'          reduce using rule 56
	'@0'           reduce using rule 56
	'@1'           reduce using rule 56
	'else'         reduce using rule 56
	'gate'         reduce using rule 56
	'of'           reduce using rule 56
	'then'         reduce using rule 56
	'with-ctrl'    shift, and enter state 177
			(reduce using rule 56)

	'}'            reduce using rule 56
	L_doubl        reduce using rule 56
	L_integ        reduce using rule 56
	L_Var          reduce using rule 56
	L_Bit          reduce using rule 56


State 113

	Gate -> 'gate' 'T' Term .                           (rule 54)
	Gate -> 'gate' 'T' Term . 'with-ctrl' '[' ListControl ']'    (rule 55)

	'$'            reduce using rule 54
	'('            reduce using rule 54
	'()'           reduce using rule 54
	')'            reduce using rule 54
	','            reduce using rule 54
	'->'           reduce using rule 54
	';'            reduce using rule 54
	'@+'           reduce using rule 54
	'@+i'          reduce using rule 54
	'@-'           reduce using rule 54
	'@-i'          reduce using rule 54
	'@0'           reduce using rule 54
	'@1'           reduce using rule 54
	'else'         reduce using rule 54
	'gate'         reduce using rule 54
	'of'           reduce using rule 54
	'then'         reduce using rule 54
	'with-ctrl'    shift, and enter state 176
			(reduce using rule 54)

	'}'            reduce using rule 54
	L_doubl        reduce using rule 54
	L_integ        reduce using rule 54
	L_Var          reduce using rule 54
	L_Bit          reduce using rule 54


State 114

	Gate -> 'gate' 'S_DAG' Term .                       (rule 52)
	Gate -> 'gate' 'S_DAG' Term . 'with-ctrl' '[' ListControl ']'    (rule 53)

	'$'            reduce using rule 52
	'('            reduce using rule 52
	'()'           reduce using rule 52
	')'            reduce using rule 52
	','            reduce using rule 52
	'->'           reduce using rule 52
	';'            reduce using rule 52
	'@+'           reduce using rule 52
	'@+i'          reduce using rule 52
	'@-'           reduce using rule 52
	'@-i'          reduce using rule 52
	'@0'           reduce using rule 52
	'@1'           reduce using rule 52
	'else'         reduce using rule 52
	'gate'         reduce using rule 52
	'of'           reduce using rule 52
	'then'         reduce using rule 52
	'with-ctrl'    shift, and enter state 175
			(reduce using rule 52)

	'}'            reduce using rule 52
	L_doubl        reduce using rule 52
	L_integ        reduce using rule 52
	L_Var          reduce using rule 52
	L_Bit          reduce using rule 52


State 115

	Gate -> 'gate' 'SWAP_THETA' Angle . Term 'with-ctrl' '[' ListControl ']'    (rule 89)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 174

State 116

	Gate -> 'gate' 'SWAP_THETA' Term . Angle            (rule 88)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 173

State 117

	Gate -> 'gate' 'SWAP' Term .                        (rule 78)
	Gate -> 'gate' 'SWAP' Term . 'with-ctrl' '[' ListControl ']'    (rule 79)

	'$'            reduce using rule 78
	'('            reduce using rule 78
	'()'           reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	'->'           reduce using rule 78
	';'            reduce using rule 78
	'@+'           reduce using rule 78
	'@+i'          reduce using rule 78
	'@-'           reduce using rule 78
	'@-i'          reduce using rule 78
	'@0'           reduce using rule 78
	'@1'           reduce using rule 78
	'else'         reduce using rule 78
	'gate'         reduce using rule 78
	'of'           reduce using rule 78
	'then'         reduce using rule 78
	'with-ctrl'    shift, and enter state 172
			(reduce using rule 78)

	'}'            reduce using rule 78
	L_doubl        reduce using rule 78
	L_integ        reduce using rule 78
	L_Var          reduce using rule 78
	L_Bit          reduce using rule 78


State 118

	Gate -> 'gate' 'SQRT_Y_DAG' Term .                  (rule 64)
	Gate -> 'gate' 'SQRT_Y_DAG' Term . 'with-ctrl' '[' ListControl ']'    (rule 65)

	'$'            reduce using rule 64
	'('            reduce using rule 64
	'()'           reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	'->'           reduce using rule 64
	';'            reduce using rule 64
	'@+'           reduce using rule 64
	'@+i'          reduce using rule 64
	'@-'           reduce using rule 64
	'@-i'          reduce using rule 64
	'@0'           reduce using rule 64
	'@1'           reduce using rule 64
	'else'         reduce using rule 64
	'gate'         reduce using rule 64
	'of'           reduce using rule 64
	'then'         reduce using rule 64
	'with-ctrl'    shift, and enter state 171
			(reduce using rule 64)

	'}'            reduce using rule 64
	L_doubl        reduce using rule 64
	L_integ        reduce using rule 64
	L_Var          reduce using rule 64
	L_Bit          reduce using rule 64


State 119

	Gate -> 'gate' 'SQRT_Y' Term .                      (rule 62)
	Gate -> 'gate' 'SQRT_Y' Term . 'with-ctrl' '[' ListControl ']'    (rule 63)

	'$'            reduce using rule 62
	'('            reduce using rule 62
	'()'           reduce using rule 62
	')'            reduce using rule 62
	','            reduce using rule 62
	'->'           reduce using rule 62
	';'            reduce using rule 62
	'@+'           reduce using rule 62
	'@+i'          reduce using rule 62
	'@-'           reduce using rule 62
	'@-i'          reduce using rule 62
	'@0'           reduce using rule 62
	'@1'           reduce using rule 62
	'else'         reduce using rule 62
	'gate'         reduce using rule 62
	'of'           reduce using rule 62
	'then'         reduce using rule 62
	'with-ctrl'    shift, and enter state 170
			(reduce using rule 62)

	'}'            reduce using rule 62
	L_doubl        reduce using rule 62
	L_integ        reduce using rule 62
	L_Var          reduce using rule 62
	L_Bit          reduce using rule 62


State 120

	Gate -> 'gate' 'SQRT_X_DAG' Term .                  (rule 60)
	Gate -> 'gate' 'SQRT_X_DAG' Term . 'with-ctrl' '[' ListControl ']'    (rule 61)

	'$'            reduce using rule 60
	'('            reduce using rule 60
	'()'           reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	'->'           reduce using rule 60
	';'            reduce using rule 60
	'@+'           reduce using rule 60
	'@+i'          reduce using rule 60
	'@-'           reduce using rule 60
	'@-i'          reduce using rule 60
	'@0'           reduce using rule 60
	'@1'           reduce using rule 60
	'else'         reduce using rule 60
	'gate'         reduce using rule 60
	'of'           reduce using rule 60
	'then'         reduce using rule 60
	'with-ctrl'    shift, and enter state 169
			(reduce using rule 60)

	'}'            reduce using rule 60
	L_doubl        reduce using rule 60
	L_integ        reduce using rule 60
	L_Var          reduce using rule 60
	L_Bit          reduce using rule 60


State 121

	Gate -> 'gate' 'SQRT_X' Term .                      (rule 58)
	Gate -> 'gate' 'SQRT_X' Term . 'with-ctrl' '[' ListControl ']'    (rule 59)

	'$'            reduce using rule 58
	'('            reduce using rule 58
	'()'           reduce using rule 58
	')'            reduce using rule 58
	','            reduce using rule 58
	'->'           reduce using rule 58
	';'            reduce using rule 58
	'@+'           reduce using rule 58
	'@+i'          reduce using rule 58
	'@-'           reduce using rule 58
	'@-i'          reduce using rule 58
	'@0'           reduce using rule 58
	'@1'           reduce using rule 58
	'else'         reduce using rule 58
	'gate'         reduce using rule 58
	'of'           reduce using rule 58
	'then'         reduce using rule 58
	'with-ctrl'    shift, and enter state 168
			(reduce using rule 58)

	'}'            reduce using rule 58
	L_doubl        reduce using rule 58
	L_integ        reduce using rule 58
	L_Var          reduce using rule 58
	L_Bit          reduce using rule 58


State 122

	Gate -> 'gate' 'SQRT_SWAP_DAG' Term .               (rule 82)
	Gate -> 'gate' 'SQRT_SWAP_DAG' Term . 'with-ctrl' '[' ListControl ']'    (rule 83)

	'$'            reduce using rule 82
	'('            reduce using rule 82
	'()'           reduce using rule 82
	')'            reduce using rule 82
	','            reduce using rule 82
	'->'           reduce using rule 82
	';'            reduce using rule 82
	'@+'           reduce using rule 82
	'@+i'          reduce using rule 82
	'@-'           reduce using rule 82
	'@-i'          reduce using rule 82
	'@0'           reduce using rule 82
	'@1'           reduce using rule 82
	'else'         reduce using rule 82
	'gate'         reduce using rule 82
	'of'           reduce using rule 82
	'then'         reduce using rule 82
	'with-ctrl'    shift, and enter state 167
			(reduce using rule 82)

	'}'            reduce using rule 82
	L_doubl        reduce using rule 82
	L_integ        reduce using rule 82
	L_Var          reduce using rule 82
	L_Bit          reduce using rule 82


State 123

	Gate -> 'gate' 'SQRT_SWAP' Term .                   (rule 80)
	Gate -> 'gate' 'SQRT_SWAP' Term . 'with-ctrl' '[' ListControl ']'    (rule 81)

	'$'            reduce using rule 80
	'('            reduce using rule 80
	'()'           reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	'->'           reduce using rule 80
	';'            reduce using rule 80
	'@+'           reduce using rule 80
	'@+i'          reduce using rule 80
	'@-'           reduce using rule 80
	'@-i'          reduce using rule 80
	'@0'           reduce using rule 80
	'@1'           reduce using rule 80
	'else'         reduce using rule 80
	'gate'         reduce using rule 80
	'of'           reduce using rule 80
	'then'         reduce using rule 80
	'with-ctrl'    shift, and enter state 166
			(reduce using rule 80)

	'}'            reduce using rule 80
	L_doubl        reduce using rule 80
	L_integ        reduce using rule 80
	L_Var          reduce using rule 80
	L_Bit          reduce using rule 80


State 124

	Gate -> 'gate' 'S' Term .                           (rule 50)
	Gate -> 'gate' 'S' Term . 'with-ctrl' '[' ListControl ']'    (rule 51)

	'$'            reduce using rule 50
	'('            reduce using rule 50
	'()'           reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	'->'           reduce using rule 50
	';'            reduce using rule 50
	'@+'           reduce using rule 50
	'@+i'          reduce using rule 50
	'@-'           reduce using rule 50
	'@-i'          reduce using rule 50
	'@0'           reduce using rule 50
	'@1'           reduce using rule 50
	'else'         reduce using rule 50
	'gate'         reduce using rule 50
	'of'           reduce using rule 50
	'then'         reduce using rule 50
	'with-ctrl'    shift, and enter state 165
			(reduce using rule 50)

	'}'            reduce using rule 50
	L_doubl        reduce using rule 50
	L_integ        reduce using rule 50
	L_Var          reduce using rule 50
	L_Bit          reduce using rule 50


State 125

	Gate -> 'gate' 'RZ' Angle . Term                    (rule 70)
	Gate -> 'gate' 'RZ' Angle . Term 'with-ctrl' '[' ListControl ']'    (rule 71)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 164

State 126

	Gate -> 'gate' 'RY' Angle . Term                    (rule 68)
	Gate -> 'gate' 'RY' Angle . Term 'with-ctrl' '[' ListControl ']'    (rule 69)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 163

State 127

	Gate -> 'gate' 'RX' Angle . Term                    (rule 66)
	Gate -> 'gate' 'RX' Angle . Term 'with-ctrl' '[' ListControl ']'    (rule 67)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 162

State 128

	Gate -> 'gate' 'ROOT_Z_DAG' Integer . Term          (rule 48)
	Gate -> 'gate' 'ROOT_Z_DAG' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 49)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 161

State 129

	Gate -> 'gate' 'ROOT_Z' Integer . Term              (rule 46)
	Gate -> 'gate' 'ROOT_Z' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 47)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 160

State 130

	Gate -> 'gate' 'ROOT_Y_DAG' Integer . Term          (rule 44)
	Gate -> 'gate' 'ROOT_Y_DAG' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 45)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 159

State 131

	Gate -> 'gate' 'ROOT_Y' Integer . Term              (rule 42)
	Gate -> 'gate' 'ROOT_Y' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 43)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 158

State 132

	Gate -> 'gate' 'ROOT_X_DAG' Integer . Term          (rule 40)
	Gate -> 'gate' 'ROOT_X_DAG' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 41)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 157

State 133

	Gate -> 'gate' 'ROOT_X' Integer . Term              (rule 38)
	Gate -> 'gate' 'ROOT_X' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 39)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 156

State 134

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer . Term       (rule 92)
	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 93)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 155

State 135

	Gate -> 'gate' 'ROOT_SWAP' Integer . Term 'with-ctrl' '[' ListControl ']'    (rule 91)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 154

State 136

	Gate -> 'gate' 'ROOT_SWAP' Term . Integer           (rule 90)

	L_integ        shift, and enter state 33

	Integer        goto state 153

State 137

	Gate -> 'gate' 'ISWAP' Term .                       (rule 84)
	Gate -> 'gate' 'ISWAP' Term . 'with-ctrl' '[' ListControl ']'    (rule 85)

	'$'            reduce using rule 84
	'('            reduce using rule 84
	'()'           reduce using rule 84
	')'            reduce using rule 84
	','            reduce using rule 84
	'->'           reduce using rule 84
	';'            reduce using rule 84
	'@+'           reduce using rule 84
	'@+i'          reduce using rule 84
	'@-'           reduce using rule 84
	'@-i'          reduce using rule 84
	'@0'           reduce using rule 84
	'@1'           reduce using rule 84
	'else'         reduce using rule 84
	'gate'         reduce using rule 84
	'of'           reduce using rule 84
	'then'         reduce using rule 84
	'with-ctrl'    shift, and enter state 152
			(reduce using rule 84)

	'}'            reduce using rule 84
	L_doubl        reduce using rule 84
	L_integ        reduce using rule 84
	L_Var          reduce using rule 84
	L_Bit          reduce using rule 84


State 138

	Gate -> 'gate' 'ID' Term .                          (rule 37)

	'$'            reduce using rule 37
	'('            reduce using rule 37
	'()'           reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	'->'           reduce using rule 37
	';'            reduce using rule 37
	'@+'           reduce using rule 37
	'@+i'          reduce using rule 37
	'@-'           reduce using rule 37
	'@-i'          reduce using rule 37
	'@0'           reduce using rule 37
	'@1'           reduce using rule 37
	'else'         reduce using rule 37
	'gate'         reduce using rule 37
	'of'           reduce using rule 37
	'then'         reduce using rule 37
	'with-ctrl'    reduce using rule 37
	'}'            reduce using rule 37
	L_doubl        reduce using rule 37
	L_integ        reduce using rule 37
	L_Var          reduce using rule 37
	L_Bit          reduce using rule 37


State 139

	Gate -> 'gate' 'H' Term .                           (rule 29)
	Gate -> 'gate' 'H' Term . 'with-ctrl' '[' ListControl ']'    (rule 30)

	'$'            reduce using rule 29
	'('            reduce using rule 29
	'()'           reduce using rule 29
	')'            reduce using rule 29
	','            reduce using rule 29
	'->'           reduce using rule 29
	';'            reduce using rule 29
	'@+'           reduce using rule 29
	'@+i'          reduce using rule 29
	'@-'           reduce using rule 29
	'@-i'          reduce using rule 29
	'@0'           reduce using rule 29
	'@1'           reduce using rule 29
	'else'         reduce using rule 29
	'gate'         reduce using rule 29
	'of'           reduce using rule 29
	'then'         reduce using rule 29
	'with-ctrl'    shift, and enter state 151
			(reduce using rule 29)

	'}'            reduce using rule 29
	L_doubl        reduce using rule 29
	L_integ        reduce using rule 29
	L_Var          reduce using rule 29
	L_Bit          reduce using rule 29


State 140

	Gate -> 'gate' 'FSWAP' Term .                       (rule 86)
	Gate -> 'gate' 'FSWAP' Term . 'with-ctrl' '[' ListControl ']'    (rule 87)

	'$'            reduce using rule 86
	'('            reduce using rule 86
	'()'           reduce using rule 86
	')'            reduce using rule 86
	','            reduce using rule 86
	'->'           reduce using rule 86
	';'            reduce using rule 86
	'@+'           reduce using rule 86
	'@+i'          reduce using rule 86
	'@-'           reduce using rule 86
	'@-i'          reduce using rule 86
	'@0'           reduce using rule 86
	'@1'           reduce using rule 86
	'else'         reduce using rule 86
	'gate'         reduce using rule 86
	'of'           reduce using rule 86
	'then'         reduce using rule 86
	'with-ctrl'    shift, and enter state 150
			(reduce using rule 86)

	'}'            reduce using rule 86
	L_doubl        reduce using rule 86
	L_integ        reduce using rule 86
	L_Var          reduce using rule 86
	L_Bit          reduce using rule 86


State 141

	Gate -> 'gate' GateIdent Term .                     (rule 94)
	Gate -> 'gate' GateIdent Term . 'with-ctrl' '[' ListControl ']'    (rule 95)

	'$'            reduce using rule 94
	'('            reduce using rule 94
	'()'           reduce using rule 94
	')'            reduce using rule 94
	','            reduce using rule 94
	'->'           reduce using rule 94
	';'            reduce using rule 94
	'@+'           reduce using rule 94
	'@+i'          reduce using rule 94
	'@-'           reduce using rule 94
	'@-i'          reduce using rule 94
	'@0'           reduce using rule 94
	'@1'           reduce using rule 94
	'else'         reduce using rule 94
	'gate'         reduce using rule 94
	'of'           reduce using rule 94
	'then'         reduce using rule 94
	'with-ctrl'    shift, and enter state 149
			(reduce using rule 94)

	'}'            reduce using rule 94
	L_doubl        reduce using rule 94
	L_integ        reduce using rule 94
	L_Var          reduce using rule 94
	L_Bit          reduce using rule 94


State 142

	Term1 -> 'if' Term 'then' . Term 'else' Term        (rule 111)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 148

State 143

	LetVariable -> Var .                                (rule 96)

	')'            reduce using rule 96
	','            reduce using rule 96
	'='            reduce using rule 96


State 144

	Term1 -> 'let' '{' LetVariable . '=' Term '}' 'in' Term    (rule 112)

	'='            shift, and enter state 147


State 145

	Term1 -> 'let' '{' '(' . LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' Term    (rule 113)

	L_Var          shift, and enter state 8

	Var            goto state 143
	LetVariable    goto state 146

State 146

	Term1 -> 'let' '{' '(' LetVariable . ',' ListLetVariable ')' '=' Term '}' 'in' Term    (rule 113)

	','            shift, and enter state 231


State 147

	Term1 -> 'let' '{' LetVariable '=' . Term '}' 'in' Term    (rule 112)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 230

State 148

	Term1 -> 'if' Term 'then' Term . 'else' Term        (rule 111)

	'else'         shift, and enter state 229


State 149

	Gate -> 'gate' GateIdent Term 'with-ctrl' . '[' ListControl ']'    (rule 95)

	'['            shift, and enter state 228


State 150

	Gate -> 'gate' 'FSWAP' Term 'with-ctrl' . '[' ListControl ']'    (rule 87)

	'['            shift, and enter state 227


State 151

	Gate -> 'gate' 'H' Term 'with-ctrl' . '[' ListControl ']'    (rule 30)

	'['            shift, and enter state 226


State 152

	Gate -> 'gate' 'ISWAP' Term 'with-ctrl' . '[' ListControl ']'    (rule 85)

	'['            shift, and enter state 225


State 153

	Gate -> 'gate' 'ROOT_SWAP' Term Integer .           (rule 90)

	'$'            reduce using rule 90
	'('            reduce using rule 90
	'()'           reduce using rule 90
	')'            reduce using rule 90
	','            reduce using rule 90
	'->'           reduce using rule 90
	';'            reduce using rule 90
	'@+'           reduce using rule 90
	'@+i'          reduce using rule 90
	'@-'           reduce using rule 90
	'@-i'          reduce using rule 90
	'@0'           reduce using rule 90
	'@1'           reduce using rule 90
	'else'         reduce using rule 90
	'gate'         reduce using rule 90
	'of'           reduce using rule 90
	'then'         reduce using rule 90
	'with-ctrl'    reduce using rule 90
	'}'            reduce using rule 90
	L_doubl        reduce using rule 90
	L_integ        reduce using rule 90
	L_Var          reduce using rule 90
	L_Bit          reduce using rule 90


State 154

	Gate -> 'gate' 'ROOT_SWAP' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 91)

	'with-ctrl'    shift, and enter state 224


State 155

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term .       (rule 92)
	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 93)

	'$'            reduce using rule 92
	'('            reduce using rule 92
	'()'           reduce using rule 92
	')'            reduce using rule 92
	','            reduce using rule 92
	'->'           reduce using rule 92
	';'            reduce using rule 92
	'@+'           reduce using rule 92
	'@+i'          reduce using rule 92
	'@-'           reduce using rule 92
	'@-i'          reduce using rule 92
	'@0'           reduce using rule 92
	'@1'           reduce using rule 92
	'else'         reduce using rule 92
	'gate'         reduce using rule 92
	'of'           reduce using rule 92
	'then'         reduce using rule 92
	'with-ctrl'    shift, and enter state 223
			(reduce using rule 92)

	'}'            reduce using rule 92
	L_doubl        reduce using rule 92
	L_integ        reduce using rule 92
	L_Var          reduce using rule 92
	L_Bit          reduce using rule 92


State 156

	Gate -> 'gate' 'ROOT_X' Integer Term .              (rule 38)
	Gate -> 'gate' 'ROOT_X' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 39)

	'$'            reduce using rule 38
	'('            reduce using rule 38
	'()'           reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	'->'           reduce using rule 38
	';'            reduce using rule 38
	'@+'           reduce using rule 38
	'@+i'          reduce using rule 38
	'@-'           reduce using rule 38
	'@-i'          reduce using rule 38
	'@0'           reduce using rule 38
	'@1'           reduce using rule 38
	'else'         reduce using rule 38
	'gate'         reduce using rule 38
	'of'           reduce using rule 38
	'then'         reduce using rule 38
	'with-ctrl'    shift, and enter state 222
			(reduce using rule 38)

	'}'            reduce using rule 38
	L_doubl        reduce using rule 38
	L_integ        reduce using rule 38
	L_Var          reduce using rule 38
	L_Bit          reduce using rule 38


State 157

	Gate -> 'gate' 'ROOT_X_DAG' Integer Term .          (rule 40)
	Gate -> 'gate' 'ROOT_X_DAG' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 41)

	'$'            reduce using rule 40
	'('            reduce using rule 40
	'()'           reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	'->'           reduce using rule 40
	';'            reduce using rule 40
	'@+'           reduce using rule 40
	'@+i'          reduce using rule 40
	'@-'           reduce using rule 40
	'@-i'          reduce using rule 40
	'@0'           reduce using rule 40
	'@1'           reduce using rule 40
	'else'         reduce using rule 40
	'gate'         reduce using rule 40
	'of'           reduce using rule 40
	'then'         reduce using rule 40
	'with-ctrl'    shift, and enter state 221
			(reduce using rule 40)

	'}'            reduce using rule 40
	L_doubl        reduce using rule 40
	L_integ        reduce using rule 40
	L_Var          reduce using rule 40
	L_Bit          reduce using rule 40


State 158

	Gate -> 'gate' 'ROOT_Y' Integer Term .              (rule 42)
	Gate -> 'gate' 'ROOT_Y' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 43)

	'$'            reduce using rule 42
	'('            reduce using rule 42
	'()'           reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	';'            reduce using rule 42
	'@+'           reduce using rule 42
	'@+i'          reduce using rule 42
	'@-'           reduce using rule 42
	'@-i'          reduce using rule 42
	'@0'           reduce using rule 42
	'@1'           reduce using rule 42
	'else'         reduce using rule 42
	'gate'         reduce using rule 42
	'of'           reduce using rule 42
	'then'         reduce using rule 42
	'with-ctrl'    shift, and enter state 220
			(reduce using rule 42)

	'}'            reduce using rule 42
	L_doubl        reduce using rule 42
	L_integ        reduce using rule 42
	L_Var          reduce using rule 42
	L_Bit          reduce using rule 42


State 159

	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term .          (rule 44)
	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 45)

	'$'            reduce using rule 44
	'('            reduce using rule 44
	'()'           reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	'->'           reduce using rule 44
	';'            reduce using rule 44
	'@+'           reduce using rule 44
	'@+i'          reduce using rule 44
	'@-'           reduce using rule 44
	'@-i'          reduce using rule 44
	'@0'           reduce using rule 44
	'@1'           reduce using rule 44
	'else'         reduce using rule 44
	'gate'         reduce using rule 44
	'of'           reduce using rule 44
	'then'         reduce using rule 44
	'with-ctrl'    shift, and enter state 219
			(reduce using rule 44)

	'}'            reduce using rule 44
	L_doubl        reduce using rule 44
	L_integ        reduce using rule 44
	L_Var          reduce using rule 44
	L_Bit          reduce using rule 44


State 160

	Gate -> 'gate' 'ROOT_Z' Integer Term .              (rule 46)
	Gate -> 'gate' 'ROOT_Z' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 47)

	'$'            reduce using rule 46
	'('            reduce using rule 46
	'()'           reduce using rule 46
	')'            reduce using rule 46
	','            reduce using rule 46
	'->'           reduce using rule 46
	';'            reduce using rule 46
	'@+'           reduce using rule 46
	'@+i'          reduce using rule 46
	'@-'           reduce using rule 46
	'@-i'          reduce using rule 46
	'@0'           reduce using rule 46
	'@1'           reduce using rule 46
	'else'         reduce using rule 46
	'gate'         reduce using rule 46
	'of'           reduce using rule 46
	'then'         reduce using rule 46
	'with-ctrl'    shift, and enter state 218
			(reduce using rule 46)

	'}'            reduce using rule 46
	L_doubl        reduce using rule 46
	L_integ        reduce using rule 46
	L_Var          reduce using rule 46
	L_Bit          reduce using rule 46


State 161

	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term .          (rule 48)
	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term . 'with-ctrl' '[' ListControl ']'    (rule 49)

	'$'            reduce using rule 48
	'('            reduce using rule 48
	'()'           reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	'->'           reduce using rule 48
	';'            reduce using rule 48
	'@+'           reduce using rule 48
	'@+i'          reduce using rule 48
	'@-'           reduce using rule 48
	'@-i'          reduce using rule 48
	'@0'           reduce using rule 48
	'@1'           reduce using rule 48
	'else'         reduce using rule 48
	'gate'         reduce using rule 48
	'of'           reduce using rule 48
	'then'         reduce using rule 48
	'with-ctrl'    shift, and enter state 217
			(reduce using rule 48)

	'}'            reduce using rule 48
	L_doubl        reduce using rule 48
	L_integ        reduce using rule 48
	L_Var          reduce using rule 48
	L_Bit          reduce using rule 48


State 162

	Gate -> 'gate' 'RX' Angle Term .                    (rule 66)
	Gate -> 'gate' 'RX' Angle Term . 'with-ctrl' '[' ListControl ']'    (rule 67)

	'$'            reduce using rule 66
	'('            reduce using rule 66
	'()'           reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	'->'           reduce using rule 66
	';'            reduce using rule 66
	'@+'           reduce using rule 66
	'@+i'          reduce using rule 66
	'@-'           reduce using rule 66
	'@-i'          reduce using rule 66
	'@0'           reduce using rule 66
	'@1'           reduce using rule 66
	'else'         reduce using rule 66
	'gate'         reduce using rule 66
	'of'           reduce using rule 66
	'then'         reduce using rule 66
	'with-ctrl'    shift, and enter state 216
			(reduce using rule 66)

	'}'            reduce using rule 66
	L_doubl        reduce using rule 66
	L_integ        reduce using rule 66
	L_Var          reduce using rule 66
	L_Bit          reduce using rule 66


State 163

	Gate -> 'gate' 'RY' Angle Term .                    (rule 68)
	Gate -> 'gate' 'RY' Angle Term . 'with-ctrl' '[' ListControl ']'    (rule 69)

	'$'            reduce using rule 68
	'('            reduce using rule 68
	'()'           reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	'->'           reduce using rule 68
	';'            reduce using rule 68
	'@+'           reduce using rule 68
	'@+i'          reduce using rule 68
	'@-'           reduce using rule 68
	'@-i'          reduce using rule 68
	'@0'           reduce using rule 68
	'@1'           reduce using rule 68
	'else'         reduce using rule 68
	'gate'         reduce using rule 68
	'of'           reduce using rule 68
	'then'         reduce using rule 68
	'with-ctrl'    shift, and enter state 215
			(reduce using rule 68)

	'}'            reduce using rule 68
	L_doubl        reduce using rule 68
	L_integ        reduce using rule 68
	L_Var          reduce using rule 68
	L_Bit          reduce using rule 68


State 164

	Gate -> 'gate' 'RZ' Angle Term .                    (rule 70)
	Gate -> 'gate' 'RZ' Angle Term . 'with-ctrl' '[' ListControl ']'    (rule 71)

	'$'            reduce using rule 70
	'('            reduce using rule 70
	'()'           reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	'->'           reduce using rule 70
	';'            reduce using rule 70
	'@+'           reduce using rule 70
	'@+i'          reduce using rule 70
	'@-'           reduce using rule 70
	'@-i'          reduce using rule 70
	'@0'           reduce using rule 70
	'@1'           reduce using rule 70
	'else'         reduce using rule 70
	'gate'         reduce using rule 70
	'of'           reduce using rule 70
	'then'         reduce using rule 70
	'with-ctrl'    shift, and enter state 214
			(reduce using rule 70)

	'}'            reduce using rule 70
	L_doubl        reduce using rule 70
	L_integ        reduce using rule 70
	L_Var          reduce using rule 70
	L_Bit          reduce using rule 70


State 165

	Gate -> 'gate' 'S' Term 'with-ctrl' . '[' ListControl ']'    (rule 51)

	'['            shift, and enter state 213


State 166

	Gate -> 'gate' 'SQRT_SWAP' Term 'with-ctrl' . '[' ListControl ']'    (rule 81)

	'['            shift, and enter state 212


State 167

	Gate -> 'gate' 'SQRT_SWAP_DAG' Term 'with-ctrl' . '[' ListControl ']'    (rule 83)

	'['            shift, and enter state 211


State 168

	Gate -> 'gate' 'SQRT_X' Term 'with-ctrl' . '[' ListControl ']'    (rule 59)

	'['            shift, and enter state 210


State 169

	Gate -> 'gate' 'SQRT_X_DAG' Term 'with-ctrl' . '[' ListControl ']'    (rule 61)

	'['            shift, and enter state 209


State 170

	Gate -> 'gate' 'SQRT_Y' Term 'with-ctrl' . '[' ListControl ']'    (rule 63)

	'['            shift, and enter state 208


State 171

	Gate -> 'gate' 'SQRT_Y_DAG' Term 'with-ctrl' . '[' ListControl ']'    (rule 65)

	'['            shift, and enter state 207


State 172

	Gate -> 'gate' 'SWAP' Term 'with-ctrl' . '[' ListControl ']'    (rule 79)

	'['            shift, and enter state 206


State 173

	Gate -> 'gate' 'SWAP_THETA' Term Angle .            (rule 88)

	'$'            reduce using rule 88
	'('            reduce using rule 88
	'()'           reduce using rule 88
	')'            reduce using rule 88
	','            reduce using rule 88
	'->'           reduce using rule 88
	';'            reduce using rule 88
	'@+'           reduce using rule 88
	'@+i'          reduce using rule 88
	'@-'           reduce using rule 88
	'@-i'          reduce using rule 88
	'@0'           reduce using rule 88
	'@1'           reduce using rule 88
	'else'         reduce using rule 88
	'gate'         reduce using rule 88
	'of'           reduce using rule 88
	'then'         reduce using rule 88
	'with-ctrl'    reduce using rule 88
	'}'            reduce using rule 88
	L_doubl        reduce using rule 88
	L_integ        reduce using rule 88
	L_Var          reduce using rule 88
	L_Bit          reduce using rule 88


State 174

	Gate -> 'gate' 'SWAP_THETA' Angle Term . 'with-ctrl' '[' ListControl ']'    (rule 89)

	'with-ctrl'    shift, and enter state 205


State 175

	Gate -> 'gate' 'S_DAG' Term 'with-ctrl' . '[' ListControl ']'    (rule 53)

	'['            shift, and enter state 204


State 176

	Gate -> 'gate' 'T' Term 'with-ctrl' . '[' ListControl ']'    (rule 55)

	'['            shift, and enter state 203


State 177

	Gate -> 'gate' 'T_DAG' Term 'with-ctrl' . '[' ListControl ']'    (rule 57)

	'['            shift, and enter state 202


State 178

	Gate -> 'gate' 'U1' Angle Term .                    (rule 72)
	Gate -> 'gate' 'U1' Angle Term . 'with-ctrl' '[' ListControl ']'    (rule 73)

	'$'            reduce using rule 72
	'('            reduce using rule 72
	'()'           reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'->'           reduce using rule 72
	';'            reduce using rule 72
	'@+'           reduce using rule 72
	'@+i'          reduce using rule 72
	'@-'           reduce using rule 72
	'@-i'          reduce using rule 72
	'@0'           reduce using rule 72
	'@1'           reduce using rule 72
	'else'         reduce using rule 72
	'gate'         reduce using rule 72
	'of'           reduce using rule 72
	'then'         reduce using rule 72
	'with-ctrl'    shift, and enter state 201
			(reduce using rule 72)

	'}'            reduce using rule 72
	L_doubl        reduce using rule 72
	L_integ        reduce using rule 72
	L_Var          reduce using rule 72
	L_Bit          reduce using rule 72


State 179

	Gate -> 'gate' 'U2' '(' Angle . ',' Angle ')' Term    (rule 74)
	Gate -> 'gate' 'U2' '(' Angle . ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	','            shift, and enter state 200


State 180

	Gate -> 'gate' 'U3' '(' Angle . ',' Angle ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle . ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	','            shift, and enter state 199


State 181

	Gate -> 'gate' 'X' Term 'with-ctrl' . '[' ListControl ']'    (rule 32)

	'['            shift, and enter state 198


State 182

	Gate -> 'gate' 'Y' Term 'with-ctrl' . '[' ListControl ']'    (rule 34)

	'['            shift, and enter state 197


State 183

	Gate -> 'gate' 'Z' Term 'with-ctrl' . '[' ListControl ']'    (rule 36)

	'['            shift, and enter state 196


State 184

	CaseExpression -> Term . '->' Var                   (rule 121)

	'->'           shift, and enter state 195


State 185

	Term1 -> 'case' Term 'of' CaseExpression . ListCaseExpression    (rule 114)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 184
	CaseExpression goto state 193
	ListCaseExpressiongoto state 194

State 186

	Tuple -> '(' Term ',' ListTerm . ')'                (rule 102)

	')'            shift, and enter state 192


State 187

	ListTerm -> Term .                                  (rule 103)
	ListTerm -> Term . ',' ListTerm                     (rule 104)

	')'            reduce using rule 103
	','            shift, and enter state 191


State 188

	Term1 -> Lambda LambdaVariable ListLambdaVariable '->' . Term    (rule 115)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 190

State 189

	ListLambdaVariable -> LambdaVariable ListLambdaVariable .    (rule 101)

	'->'           reduce using rule 101


State 190

	Term1 -> Lambda LambdaVariable ListLambdaVariable '->' Term .    (rule 115)

	'$'            reduce using rule 115
	'('            reduce using rule 115
	'()'           reduce using rule 115
	')'            reduce using rule 115
	','            reduce using rule 115
	'->'           reduce using rule 115
	';'            reduce using rule 115
	'@+'           reduce using rule 115
	'@+i'          reduce using rule 115
	'@-'           reduce using rule 115
	'@-i'          reduce using rule 115
	'@0'           reduce using rule 115
	'@1'           reduce using rule 115
	'else'         reduce using rule 115
	'gate'         reduce using rule 115
	'of'           reduce using rule 115
	'then'         reduce using rule 115
	'with-ctrl'    reduce using rule 115
	'}'            reduce using rule 115
	L_doubl        reduce using rule 115
	L_integ        reduce using rule 115
	L_Var          reduce using rule 115
	L_Bit          reduce using rule 115


State 191

	ListTerm -> Term ',' . ListTerm                     (rule 104)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	ListTerm       goto state 273
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 187

State 192

	Tuple -> '(' Term ',' ListTerm ')' .                (rule 102)

	'$'            reduce using rule 102
	'('            reduce using rule 102
	'()'           reduce using rule 102
	')'            reduce using rule 102
	','            reduce using rule 102
	'->'           reduce using rule 102
	';'            reduce using rule 102
	'@+'           reduce using rule 102
	'@+i'          reduce using rule 102
	'@-'           reduce using rule 102
	'@-i'          reduce using rule 102
	'@0'           reduce using rule 102
	'@1'           reduce using rule 102
	'else'         reduce using rule 102
	'gate'         reduce using rule 102
	'of'           reduce using rule 102
	'then'         reduce using rule 102
	'with-ctrl'    reduce using rule 102
	'}'            reduce using rule 102
	L_doubl        reduce using rule 102
	L_integ        reduce using rule 102
	L_Var          reduce using rule 102
	L_Bit          reduce using rule 102


State 193

	ListCaseExpression -> CaseExpression .              (rule 122)
	ListCaseExpression -> CaseExpression . ListCaseExpression    (rule 123)

	'$'            reduce using rule 122
	'('            shift, and enter state 48
			(reduce using rule 122)

	'()'           shift, and enter state 49
			(reduce using rule 122)

	')'            reduce using rule 122
	','            reduce using rule 122
	'->'           reduce using rule 122
	';'            reduce using rule 122
	'@+'           reduce using rule 122
	'@+i'          reduce using rule 122
	'@-'           reduce using rule 122
	'@-i'          reduce using rule 122
	'@0'           reduce using rule 122
	'@1'           reduce using rule 122
	'case'         shift, and enter state 50
	'else'         reduce using rule 122
	'gate'         shift, and enter state 51
			(reduce using rule 122)

	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	'of'           reduce using rule 122
	'then'         reduce using rule 122
	'with-ctrl'    reduce using rule 122
	'}'            reduce using rule 122
	L_doubl        reduce using rule 122
	L_integ        reduce using rule 122
	L_Var          shift, and enter state 8
			(reduce using rule 122)

	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55
			(reduce using rule 122)


	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 184
	CaseExpression goto state 193
	ListCaseExpressiongoto state 272

State 194

	Term1 -> 'case' Term 'of' CaseExpression ListCaseExpression .    (rule 114)

	'$'            reduce using rule 114
	'('            reduce using rule 114
	'()'           reduce using rule 114
	')'            reduce using rule 114
	','            reduce using rule 114
	'->'           reduce using rule 114
	';'            reduce using rule 114
	'@+'           reduce using rule 114
	'@+i'          reduce using rule 114
	'@-'           reduce using rule 114
	'@-i'          reduce using rule 114
	'@0'           reduce using rule 114
	'@1'           reduce using rule 114
	'else'         reduce using rule 114
	'gate'         reduce using rule 114
	'of'           reduce using rule 114
	'then'         reduce using rule 114
	'with-ctrl'    reduce using rule 114
	'}'            reduce using rule 114
	L_doubl        reduce using rule 114
	L_integ        reduce using rule 114
	L_Var          reduce using rule 114
	L_Bit          reduce using rule 114


State 195

	CaseExpression -> Term '->' . Var                   (rule 121)

	L_Var          shift, and enter state 8

	Var            goto state 271

State 196

	Gate -> 'gate' 'Z' Term 'with-ctrl' '[' . ListControl ']'    (rule 36)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 270
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 197

	Gate -> 'gate' 'Y' Term 'with-ctrl' '[' . ListControl ']'    (rule 34)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 269
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 198

	Gate -> 'gate' 'X' Term 'with-ctrl' '[' . ListControl ']'    (rule 32)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 268
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 199

	Gate -> 'gate' 'U3' '(' Angle ',' . Angle ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' . Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 267

State 200

	Gate -> 'gate' 'U2' '(' Angle ',' . Angle ')' Term    (rule 74)
	Gate -> 'gate' 'U2' '(' Angle ',' . Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 266

State 201

	Gate -> 'gate' 'U1' Angle Term 'with-ctrl' . '[' ListControl ']'    (rule 73)

	'['            shift, and enter state 265


State 202

	Gate -> 'gate' 'T_DAG' Term 'with-ctrl' '[' . ListControl ']'    (rule 57)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 264
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 203

	Gate -> 'gate' 'T' Term 'with-ctrl' '[' . ListControl ']'    (rule 55)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 263
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 204

	Gate -> 'gate' 'S_DAG' Term 'with-ctrl' '[' . ListControl ']'    (rule 53)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 262
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 205

	Gate -> 'gate' 'SWAP_THETA' Angle Term 'with-ctrl' . '[' ListControl ']'    (rule 89)

	'['            shift, and enter state 261


State 206

	Gate -> 'gate' 'SWAP' Term 'with-ctrl' '[' . ListControl ']'    (rule 79)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 260
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 207

	Gate -> 'gate' 'SQRT_Y_DAG' Term 'with-ctrl' '[' . ListControl ']'    (rule 65)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 259
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 208

	Gate -> 'gate' 'SQRT_Y' Term 'with-ctrl' '[' . ListControl ']'    (rule 63)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 258
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 209

	Gate -> 'gate' 'SQRT_X_DAG' Term 'with-ctrl' '[' . ListControl ']'    (rule 61)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 257
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 210

	Gate -> 'gate' 'SQRT_X' Term 'with-ctrl' '[' . ListControl ']'    (rule 59)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 256
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 211

	Gate -> 'gate' 'SQRT_SWAP_DAG' Term 'with-ctrl' '[' . ListControl ']'    (rule 83)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 255
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 212

	Gate -> 'gate' 'SQRT_SWAP' Term 'with-ctrl' '[' . ListControl ']'    (rule 81)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 254
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 213

	Gate -> 'gate' 'S' Term 'with-ctrl' '[' . ListControl ']'    (rule 51)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 253
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 214

	Gate -> 'gate' 'RZ' Angle Term 'with-ctrl' . '[' ListControl ']'    (rule 71)

	'['            shift, and enter state 252


State 215

	Gate -> 'gate' 'RY' Angle Term 'with-ctrl' . '[' ListControl ']'    (rule 69)

	'['            shift, and enter state 251


State 216

	Gate -> 'gate' 'RX' Angle Term 'with-ctrl' . '[' ListControl ']'    (rule 67)

	'['            shift, and enter state 250


State 217

	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 49)

	'['            shift, and enter state 249


State 218

	Gate -> 'gate' 'ROOT_Z' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 47)

	'['            shift, and enter state 248


State 219

	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 45)

	'['            shift, and enter state 247


State 220

	Gate -> 'gate' 'ROOT_Y' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 43)

	'['            shift, and enter state 246


State 221

	Gate -> 'gate' 'ROOT_X_DAG' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 41)

	'['            shift, and enter state 245


State 222

	Gate -> 'gate' 'ROOT_X' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 39)

	'['            shift, and enter state 244


State 223

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 93)

	'['            shift, and enter state 243


State 224

	Gate -> 'gate' 'ROOT_SWAP' Integer Term 'with-ctrl' . '[' ListControl ']'    (rule 91)

	'['            shift, and enter state 242


State 225

	Gate -> 'gate' 'ISWAP' Term 'with-ctrl' '[' . ListControl ']'    (rule 85)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 241
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 226

	Gate -> 'gate' 'H' Term 'with-ctrl' '[' . ListControl ']'    (rule 30)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 240
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 227

	Gate -> 'gate' 'FSWAP' Term 'with-ctrl' '[' . ListControl ']'    (rule 87)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 239
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 228

	Gate -> 'gate' GateIdent Term 'with-ctrl' '[' . ListControl ']'    (rule 95)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 237
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 229

	Term1 -> 'if' Term 'then' Term 'else' . Term        (rule 111)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 235

State 230

	Term1 -> 'let' '{' LetVariable '=' Term . '}' 'in' Term    (rule 112)

	'}'            shift, and enter state 234


State 231

	Term1 -> 'let' '{' '(' LetVariable ',' . ListLetVariable ')' '=' Term '}' 'in' Term    (rule 113)

	L_Var          shift, and enter state 8

	Var            goto state 143
	LetVariable    goto state 232
	ListLetVariablegoto state 233

State 232

	ListLetVariable -> LetVariable .                    (rule 97)
	ListLetVariable -> LetVariable . ',' ListLetVariable    (rule 98)

	')'            reduce using rule 97
	','            shift, and enter state 317


State 233

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable . ')' '=' Term '}' 'in' Term    (rule 113)

	')'            shift, and enter state 316


State 234

	Term1 -> 'let' '{' LetVariable '=' Term '}' . 'in' Term    (rule 112)

	'in'           shift, and enter state 315


State 235

	Term1 -> 'if' Term 'then' Term 'else' Term .        (rule 111)

	'$'            reduce using rule 111
	'('            reduce using rule 111
	'()'           reduce using rule 111
	')'            reduce using rule 111
	','            reduce using rule 111
	'->'           reduce using rule 111
	';'            reduce using rule 111
	'@+'           reduce using rule 111
	'@+i'          reduce using rule 111
	'@-'           reduce using rule 111
	'@-i'          reduce using rule 111
	'@0'           reduce using rule 111
	'@1'           reduce using rule 111
	'else'         reduce using rule 111
	'gate'         reduce using rule 111
	'of'           reduce using rule 111
	'then'         reduce using rule 111
	'with-ctrl'    reduce using rule 111
	'}'            reduce using rule 111
	L_doubl        reduce using rule 111
	L_integ        reduce using rule 111
	L_Var          reduce using rule 111
	L_Bit          reduce using rule 111


State 236

	ListControl -> Control .                            (rule 27)
	ListControl -> Control . ',' ListControl            (rule 28)

	','            shift, and enter state 314
	']'            reduce using rule 27


State 237

	Gate -> 'gate' GateIdent Term 'with-ctrl' '[' ListControl . ']'    (rule 95)

	']'            shift, and enter state 313


State 238

	Control -> Term . ControlState                      (rule 26)

	'@+'           shift, and enter state 307
	'@+i'          shift, and enter state 308
	'@-'           shift, and enter state 309
	'@-i'          shift, and enter state 310
	'@0'           shift, and enter state 311
	'@1'           shift, and enter state 312

	ControlState   goto state 306

State 239

	Gate -> 'gate' 'FSWAP' Term 'with-ctrl' '[' ListControl . ']'    (rule 87)

	']'            shift, and enter state 305


State 240

	Gate -> 'gate' 'H' Term 'with-ctrl' '[' ListControl . ']'    (rule 30)

	']'            shift, and enter state 304


State 241

	Gate -> 'gate' 'ISWAP' Term 'with-ctrl' '[' ListControl . ']'    (rule 85)

	']'            shift, and enter state 303


State 242

	Gate -> 'gate' 'ROOT_SWAP' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 91)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 302
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 243

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 93)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 301
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 244

	Gate -> 'gate' 'ROOT_X' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 39)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 300
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 245

	Gate -> 'gate' 'ROOT_X_DAG' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 41)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 299
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 246

	Gate -> 'gate' 'ROOT_Y' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 43)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 298
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 247

	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 45)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 297
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 248

	Gate -> 'gate' 'ROOT_Z' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 47)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 296
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 249

	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term 'with-ctrl' '[' . ListControl ']'    (rule 49)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 295
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 250

	Gate -> 'gate' 'RX' Angle Term 'with-ctrl' '[' . ListControl ']'    (rule 67)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 294
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 251

	Gate -> 'gate' 'RY' Angle Term 'with-ctrl' '[' . ListControl ']'    (rule 69)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 293
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 252

	Gate -> 'gate' 'RZ' Angle Term 'with-ctrl' '[' . ListControl ']'    (rule 71)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 292
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 253

	Gate -> 'gate' 'S' Term 'with-ctrl' '[' ListControl . ']'    (rule 51)

	']'            shift, and enter state 291


State 254

	Gate -> 'gate' 'SQRT_SWAP' Term 'with-ctrl' '[' ListControl . ']'    (rule 81)

	']'            shift, and enter state 290


State 255

	Gate -> 'gate' 'SQRT_SWAP_DAG' Term 'with-ctrl' '[' ListControl . ']'    (rule 83)

	']'            shift, and enter state 289


State 256

	Gate -> 'gate' 'SQRT_X' Term 'with-ctrl' '[' ListControl . ']'    (rule 59)

	']'            shift, and enter state 288


State 257

	Gate -> 'gate' 'SQRT_X_DAG' Term 'with-ctrl' '[' ListControl . ']'    (rule 61)

	']'            shift, and enter state 287


State 258

	Gate -> 'gate' 'SQRT_Y' Term 'with-ctrl' '[' ListControl . ']'    (rule 63)

	']'            shift, and enter state 286


State 259

	Gate -> 'gate' 'SQRT_Y_DAG' Term 'with-ctrl' '[' ListControl . ']'    (rule 65)

	']'            shift, and enter state 285


State 260

	Gate -> 'gate' 'SWAP' Term 'with-ctrl' '[' ListControl . ']'    (rule 79)

	']'            shift, and enter state 284


State 261

	Gate -> 'gate' 'SWAP_THETA' Angle Term 'with-ctrl' '[' . ListControl ']'    (rule 89)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 283
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 262

	Gate -> 'gate' 'S_DAG' Term 'with-ctrl' '[' ListControl . ']'    (rule 53)

	']'            shift, and enter state 282


State 263

	Gate -> 'gate' 'T' Term 'with-ctrl' '[' ListControl . ']'    (rule 55)

	']'            shift, and enter state 281


State 264

	Gate -> 'gate' 'T_DAG' Term 'with-ctrl' '[' ListControl . ']'    (rule 57)

	']'            shift, and enter state 280


State 265

	Gate -> 'gate' 'U1' Angle Term 'with-ctrl' '[' . ListControl ']'    (rule 73)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 279
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 266

	Gate -> 'gate' 'U2' '(' Angle ',' Angle . ')' Term    (rule 74)
	Gate -> 'gate' 'U2' '(' Angle ',' Angle . ')' Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	')'            shift, and enter state 278


State 267

	Gate -> 'gate' 'U3' '(' Angle ',' Angle . ',' Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle . ',' Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	','            shift, and enter state 277


State 268

	Gate -> 'gate' 'X' Term 'with-ctrl' '[' ListControl . ']'    (rule 32)

	']'            shift, and enter state 276


State 269

	Gate -> 'gate' 'Y' Term 'with-ctrl' '[' ListControl . ']'    (rule 34)

	']'            shift, and enter state 275


State 270

	Gate -> 'gate' 'Z' Term 'with-ctrl' '[' ListControl . ']'    (rule 36)

	']'            shift, and enter state 274


State 271

	CaseExpression -> Term '->' Var .                   (rule 121)

	'$'            reduce using rule 121
	'('            reduce using rule 121
	'()'           reduce using rule 121
	')'            reduce using rule 121
	','            reduce using rule 121
	'->'           reduce using rule 121
	';'            reduce using rule 121
	'@+'           reduce using rule 121
	'@+i'          reduce using rule 121
	'@-'           reduce using rule 121
	'@-i'          reduce using rule 121
	'@0'           reduce using rule 121
	'@1'           reduce using rule 121
	'case'         reduce using rule 121
	'else'         reduce using rule 121
	'gate'         reduce using rule 121
	'if'           reduce using rule 121
	'let'          reduce using rule 121
	'of'           reduce using rule 121
	'then'         reduce using rule 121
	'with-ctrl'    reduce using rule 121
	'}'            reduce using rule 121
	L_doubl        reduce using rule 121
	L_integ        reduce using rule 121
	L_Var          reduce using rule 121
	L_Lambda       reduce using rule 121
	L_Bit          reduce using rule 121


State 272

	ListCaseExpression -> CaseExpression ListCaseExpression .    (rule 123)

	'$'            reduce using rule 123
	'('            reduce using rule 123
	'()'           reduce using rule 123
	')'            reduce using rule 123
	','            reduce using rule 123
	'->'           reduce using rule 123
	';'            reduce using rule 123
	'@+'           reduce using rule 123
	'@+i'          reduce using rule 123
	'@-'           reduce using rule 123
	'@-i'          reduce using rule 123
	'@0'           reduce using rule 123
	'@1'           reduce using rule 123
	'else'         reduce using rule 123
	'gate'         reduce using rule 123
	'of'           reduce using rule 123
	'then'         reduce using rule 123
	'with-ctrl'    reduce using rule 123
	'}'            reduce using rule 123
	L_doubl        reduce using rule 123
	L_integ        reduce using rule 123
	L_Var          reduce using rule 123
	L_Bit          reduce using rule 123


State 273

	ListTerm -> Term ',' ListTerm .                     (rule 104)

	')'            reduce using rule 104


State 274

	Gate -> 'gate' 'Z' Term 'with-ctrl' '[' ListControl ']' .    (rule 36)

	'$'            reduce using rule 36
	'('            reduce using rule 36
	'()'           reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'->'           reduce using rule 36
	';'            reduce using rule 36
	'@+'           reduce using rule 36
	'@+i'          reduce using rule 36
	'@-'           reduce using rule 36
	'@-i'          reduce using rule 36
	'@0'           reduce using rule 36
	'@1'           reduce using rule 36
	'else'         reduce using rule 36
	'gate'         reduce using rule 36
	'of'           reduce using rule 36
	'then'         reduce using rule 36
	'with-ctrl'    reduce using rule 36
	'}'            reduce using rule 36
	L_doubl        reduce using rule 36
	L_integ        reduce using rule 36
	L_Var          reduce using rule 36
	L_Bit          reduce using rule 36


State 275

	Gate -> 'gate' 'Y' Term 'with-ctrl' '[' ListControl ']' .    (rule 34)

	'$'            reduce using rule 34
	'('            reduce using rule 34
	'()'           reduce using rule 34
	')'            reduce using rule 34
	','            reduce using rule 34
	'->'           reduce using rule 34
	';'            reduce using rule 34
	'@+'           reduce using rule 34
	'@+i'          reduce using rule 34
	'@-'           reduce using rule 34
	'@-i'          reduce using rule 34
	'@0'           reduce using rule 34
	'@1'           reduce using rule 34
	'else'         reduce using rule 34
	'gate'         reduce using rule 34
	'of'           reduce using rule 34
	'then'         reduce using rule 34
	'with-ctrl'    reduce using rule 34
	'}'            reduce using rule 34
	L_doubl        reduce using rule 34
	L_integ        reduce using rule 34
	L_Var          reduce using rule 34
	L_Bit          reduce using rule 34


State 276

	Gate -> 'gate' 'X' Term 'with-ctrl' '[' ListControl ']' .    (rule 32)

	'$'            reduce using rule 32
	'('            reduce using rule 32
	'()'           reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'->'           reduce using rule 32
	';'            reduce using rule 32
	'@+'           reduce using rule 32
	'@+i'          reduce using rule 32
	'@-'           reduce using rule 32
	'@-i'          reduce using rule 32
	'@0'           reduce using rule 32
	'@1'           reduce using rule 32
	'else'         reduce using rule 32
	'gate'         reduce using rule 32
	'of'           reduce using rule 32
	'then'         reduce using rule 32
	'with-ctrl'    reduce using rule 32
	'}'            reduce using rule 32
	L_doubl        reduce using rule 32
	L_integ        reduce using rule 32
	L_Var          reduce using rule 32
	L_Bit          reduce using rule 32


State 277

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' . Angle ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' . Angle ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	L_doubl        shift, and enter state 2

	Double         goto state 110
	Angle          goto state 336

State 278

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' . Term    (rule 74)
	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' . Term 'with-ctrl' '[' ListControl ']'    (rule 75)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 335

State 279

	Gate -> 'gate' 'U1' Angle Term 'with-ctrl' '[' ListControl . ']'    (rule 73)

	']'            shift, and enter state 334


State 280

	Gate -> 'gate' 'T_DAG' Term 'with-ctrl' '[' ListControl ']' .    (rule 57)

	'$'            reduce using rule 57
	'('            reduce using rule 57
	'()'           reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	'->'           reduce using rule 57
	';'            reduce using rule 57
	'@+'           reduce using rule 57
	'@+i'          reduce using rule 57
	'@-'           reduce using rule 57
	'@-i'          reduce using rule 57
	'@0'           reduce using rule 57
	'@1'           reduce using rule 57
	'else'         reduce using rule 57
	'gate'         reduce using rule 57
	'of'           reduce using rule 57
	'then'         reduce using rule 57
	'with-ctrl'    reduce using rule 57
	'}'            reduce using rule 57
	L_doubl        reduce using rule 57
	L_integ        reduce using rule 57
	L_Var          reduce using rule 57
	L_Bit          reduce using rule 57


State 281

	Gate -> 'gate' 'T' Term 'with-ctrl' '[' ListControl ']' .    (rule 55)

	'$'            reduce using rule 55
	'('            reduce using rule 55
	'()'           reduce using rule 55
	')'            reduce using rule 55
	','            reduce using rule 55
	'->'           reduce using rule 55
	';'            reduce using rule 55
	'@+'           reduce using rule 55
	'@+i'          reduce using rule 55
	'@-'           reduce using rule 55
	'@-i'          reduce using rule 55
	'@0'           reduce using rule 55
	'@1'           reduce using rule 55
	'else'         reduce using rule 55
	'gate'         reduce using rule 55
	'of'           reduce using rule 55
	'then'         reduce using rule 55
	'with-ctrl'    reduce using rule 55
	'}'            reduce using rule 55
	L_doubl        reduce using rule 55
	L_integ        reduce using rule 55
	L_Var          reduce using rule 55
	L_Bit          reduce using rule 55


State 282

	Gate -> 'gate' 'S_DAG' Term 'with-ctrl' '[' ListControl ']' .    (rule 53)

	'$'            reduce using rule 53
	'('            reduce using rule 53
	'()'           reduce using rule 53
	')'            reduce using rule 53
	','            reduce using rule 53
	'->'           reduce using rule 53
	';'            reduce using rule 53
	'@+'           reduce using rule 53
	'@+i'          reduce using rule 53
	'@-'           reduce using rule 53
	'@-i'          reduce using rule 53
	'@0'           reduce using rule 53
	'@1'           reduce using rule 53
	'else'         reduce using rule 53
	'gate'         reduce using rule 53
	'of'           reduce using rule 53
	'then'         reduce using rule 53
	'with-ctrl'    reduce using rule 53
	'}'            reduce using rule 53
	L_doubl        reduce using rule 53
	L_integ        reduce using rule 53
	L_Var          reduce using rule 53
	L_Bit          reduce using rule 53


State 283

	Gate -> 'gate' 'SWAP_THETA' Angle Term 'with-ctrl' '[' ListControl . ']'    (rule 89)

	']'            shift, and enter state 333


State 284

	Gate -> 'gate' 'SWAP' Term 'with-ctrl' '[' ListControl ']' .    (rule 79)

	'$'            reduce using rule 79
	'('            reduce using rule 79
	'()'           reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	'->'           reduce using rule 79
	';'            reduce using rule 79
	'@+'           reduce using rule 79
	'@+i'          reduce using rule 79
	'@-'           reduce using rule 79
	'@-i'          reduce using rule 79
	'@0'           reduce using rule 79
	'@1'           reduce using rule 79
	'else'         reduce using rule 79
	'gate'         reduce using rule 79
	'of'           reduce using rule 79
	'then'         reduce using rule 79
	'with-ctrl'    reduce using rule 79
	'}'            reduce using rule 79
	L_doubl        reduce using rule 79
	L_integ        reduce using rule 79
	L_Var          reduce using rule 79
	L_Bit          reduce using rule 79


State 285

	Gate -> 'gate' 'SQRT_Y_DAG' Term 'with-ctrl' '[' ListControl ']' .    (rule 65)

	'$'            reduce using rule 65
	'('            reduce using rule 65
	'()'           reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	'->'           reduce using rule 65
	';'            reduce using rule 65
	'@+'           reduce using rule 65
	'@+i'          reduce using rule 65
	'@-'           reduce using rule 65
	'@-i'          reduce using rule 65
	'@0'           reduce using rule 65
	'@1'           reduce using rule 65
	'else'         reduce using rule 65
	'gate'         reduce using rule 65
	'of'           reduce using rule 65
	'then'         reduce using rule 65
	'with-ctrl'    reduce using rule 65
	'}'            reduce using rule 65
	L_doubl        reduce using rule 65
	L_integ        reduce using rule 65
	L_Var          reduce using rule 65
	L_Bit          reduce using rule 65


State 286

	Gate -> 'gate' 'SQRT_Y' Term 'with-ctrl' '[' ListControl ']' .    (rule 63)

	'$'            reduce using rule 63
	'('            reduce using rule 63
	'()'           reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	'->'           reduce using rule 63
	';'            reduce using rule 63
	'@+'           reduce using rule 63
	'@+i'          reduce using rule 63
	'@-'           reduce using rule 63
	'@-i'          reduce using rule 63
	'@0'           reduce using rule 63
	'@1'           reduce using rule 63
	'else'         reduce using rule 63
	'gate'         reduce using rule 63
	'of'           reduce using rule 63
	'then'         reduce using rule 63
	'with-ctrl'    reduce using rule 63
	'}'            reduce using rule 63
	L_doubl        reduce using rule 63
	L_integ        reduce using rule 63
	L_Var          reduce using rule 63
	L_Bit          reduce using rule 63


State 287

	Gate -> 'gate' 'SQRT_X_DAG' Term 'with-ctrl' '[' ListControl ']' .    (rule 61)

	'$'            reduce using rule 61
	'('            reduce using rule 61
	'()'           reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	'->'           reduce using rule 61
	';'            reduce using rule 61
	'@+'           reduce using rule 61
	'@+i'          reduce using rule 61
	'@-'           reduce using rule 61
	'@-i'          reduce using rule 61
	'@0'           reduce using rule 61
	'@1'           reduce using rule 61
	'else'         reduce using rule 61
	'gate'         reduce using rule 61
	'of'           reduce using rule 61
	'then'         reduce using rule 61
	'with-ctrl'    reduce using rule 61
	'}'            reduce using rule 61
	L_doubl        reduce using rule 61
	L_integ        reduce using rule 61
	L_Var          reduce using rule 61
	L_Bit          reduce using rule 61


State 288

	Gate -> 'gate' 'SQRT_X' Term 'with-ctrl' '[' ListControl ']' .    (rule 59)

	'$'            reduce using rule 59
	'('            reduce using rule 59
	'()'           reduce using rule 59
	')'            reduce using rule 59
	','            reduce using rule 59
	'->'           reduce using rule 59
	';'            reduce using rule 59
	'@+'           reduce using rule 59
	'@+i'          reduce using rule 59
	'@-'           reduce using rule 59
	'@-i'          reduce using rule 59
	'@0'           reduce using rule 59
	'@1'           reduce using rule 59
	'else'         reduce using rule 59
	'gate'         reduce using rule 59
	'of'           reduce using rule 59
	'then'         reduce using rule 59
	'with-ctrl'    reduce using rule 59
	'}'            reduce using rule 59
	L_doubl        reduce using rule 59
	L_integ        reduce using rule 59
	L_Var          reduce using rule 59
	L_Bit          reduce using rule 59


State 289

	Gate -> 'gate' 'SQRT_SWAP_DAG' Term 'with-ctrl' '[' ListControl ']' .    (rule 83)

	'$'            reduce using rule 83
	'('            reduce using rule 83
	'()'           reduce using rule 83
	')'            reduce using rule 83
	','            reduce using rule 83
	'->'           reduce using rule 83
	';'            reduce using rule 83
	'@+'           reduce using rule 83
	'@+i'          reduce using rule 83
	'@-'           reduce using rule 83
	'@-i'          reduce using rule 83
	'@0'           reduce using rule 83
	'@1'           reduce using rule 83
	'else'         reduce using rule 83
	'gate'         reduce using rule 83
	'of'           reduce using rule 83
	'then'         reduce using rule 83
	'with-ctrl'    reduce using rule 83
	'}'            reduce using rule 83
	L_doubl        reduce using rule 83
	L_integ        reduce using rule 83
	L_Var          reduce using rule 83
	L_Bit          reduce using rule 83


State 290

	Gate -> 'gate' 'SQRT_SWAP' Term 'with-ctrl' '[' ListControl ']' .    (rule 81)

	'$'            reduce using rule 81
	'('            reduce using rule 81
	'()'           reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	'->'           reduce using rule 81
	';'            reduce using rule 81
	'@+'           reduce using rule 81
	'@+i'          reduce using rule 81
	'@-'           reduce using rule 81
	'@-i'          reduce using rule 81
	'@0'           reduce using rule 81
	'@1'           reduce using rule 81
	'else'         reduce using rule 81
	'gate'         reduce using rule 81
	'of'           reduce using rule 81
	'then'         reduce using rule 81
	'with-ctrl'    reduce using rule 81
	'}'            reduce using rule 81
	L_doubl        reduce using rule 81
	L_integ        reduce using rule 81
	L_Var          reduce using rule 81
	L_Bit          reduce using rule 81


State 291

	Gate -> 'gate' 'S' Term 'with-ctrl' '[' ListControl ']' .    (rule 51)

	'$'            reduce using rule 51
	'('            reduce using rule 51
	'()'           reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	'->'           reduce using rule 51
	';'            reduce using rule 51
	'@+'           reduce using rule 51
	'@+i'          reduce using rule 51
	'@-'           reduce using rule 51
	'@-i'          reduce using rule 51
	'@0'           reduce using rule 51
	'@1'           reduce using rule 51
	'else'         reduce using rule 51
	'gate'         reduce using rule 51
	'of'           reduce using rule 51
	'then'         reduce using rule 51
	'with-ctrl'    reduce using rule 51
	'}'            reduce using rule 51
	L_doubl        reduce using rule 51
	L_integ        reduce using rule 51
	L_Var          reduce using rule 51
	L_Bit          reduce using rule 51


State 292

	Gate -> 'gate' 'RZ' Angle Term 'with-ctrl' '[' ListControl . ']'    (rule 71)

	']'            shift, and enter state 332


State 293

	Gate -> 'gate' 'RY' Angle Term 'with-ctrl' '[' ListControl . ']'    (rule 69)

	']'            shift, and enter state 331


State 294

	Gate -> 'gate' 'RX' Angle Term 'with-ctrl' '[' ListControl . ']'    (rule 67)

	']'            shift, and enter state 330


State 295

	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 49)

	']'            shift, and enter state 329


State 296

	Gate -> 'gate' 'ROOT_Z' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 47)

	']'            shift, and enter state 328


State 297

	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 45)

	']'            shift, and enter state 327


State 298

	Gate -> 'gate' 'ROOT_Y' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 43)

	']'            shift, and enter state 326


State 299

	Gate -> 'gate' 'ROOT_X_DAG' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 41)

	']'            shift, and enter state 325


State 300

	Gate -> 'gate' 'ROOT_X' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 39)

	']'            shift, and enter state 324


State 301

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 93)

	']'            shift, and enter state 323


State 302

	Gate -> 'gate' 'ROOT_SWAP' Integer Term 'with-ctrl' '[' ListControl . ']'    (rule 91)

	']'            shift, and enter state 322


State 303

	Gate -> 'gate' 'ISWAP' Term 'with-ctrl' '[' ListControl ']' .    (rule 85)

	'$'            reduce using rule 85
	'('            reduce using rule 85
	'()'           reduce using rule 85
	')'            reduce using rule 85
	','            reduce using rule 85
	'->'           reduce using rule 85
	';'            reduce using rule 85
	'@+'           reduce using rule 85
	'@+i'          reduce using rule 85
	'@-'           reduce using rule 85
	'@-i'          reduce using rule 85
	'@0'           reduce using rule 85
	'@1'           reduce using rule 85
	'else'         reduce using rule 85
	'gate'         reduce using rule 85
	'of'           reduce using rule 85
	'then'         reduce using rule 85
	'with-ctrl'    reduce using rule 85
	'}'            reduce using rule 85
	L_doubl        reduce using rule 85
	L_integ        reduce using rule 85
	L_Var          reduce using rule 85
	L_Bit          reduce using rule 85


State 304

	Gate -> 'gate' 'H' Term 'with-ctrl' '[' ListControl ']' .    (rule 30)

	'$'            reduce using rule 30
	'('            reduce using rule 30
	'()'           reduce using rule 30
	')'            reduce using rule 30
	','            reduce using rule 30
	'->'           reduce using rule 30
	';'            reduce using rule 30
	'@+'           reduce using rule 30
	'@+i'          reduce using rule 30
	'@-'           reduce using rule 30
	'@-i'          reduce using rule 30
	'@0'           reduce using rule 30
	'@1'           reduce using rule 30
	'else'         reduce using rule 30
	'gate'         reduce using rule 30
	'of'           reduce using rule 30
	'then'         reduce using rule 30
	'with-ctrl'    reduce using rule 30
	'}'            reduce using rule 30
	L_doubl        reduce using rule 30
	L_integ        reduce using rule 30
	L_Var          reduce using rule 30
	L_Bit          reduce using rule 30


State 305

	Gate -> 'gate' 'FSWAP' Term 'with-ctrl' '[' ListControl ']' .    (rule 87)

	'$'            reduce using rule 87
	'('            reduce using rule 87
	'()'           reduce using rule 87
	')'            reduce using rule 87
	','            reduce using rule 87
	'->'           reduce using rule 87
	';'            reduce using rule 87
	'@+'           reduce using rule 87
	'@+i'          reduce using rule 87
	'@-'           reduce using rule 87
	'@-i'          reduce using rule 87
	'@0'           reduce using rule 87
	'@1'           reduce using rule 87
	'else'         reduce using rule 87
	'gate'         reduce using rule 87
	'of'           reduce using rule 87
	'then'         reduce using rule 87
	'with-ctrl'    reduce using rule 87
	'}'            reduce using rule 87
	L_doubl        reduce using rule 87
	L_integ        reduce using rule 87
	L_Var          reduce using rule 87
	L_Bit          reduce using rule 87


State 306

	Control -> Term ControlState .                      (rule 26)

	','            reduce using rule 26
	']'            reduce using rule 26


State 307

	ControlState -> '@+' .                              (rule 22)

	','            reduce using rule 22
	']'            reduce using rule 22


State 308

	ControlState -> '@+i' .                             (rule 24)

	','            reduce using rule 24
	']'            reduce using rule 24


State 309

	ControlState -> '@-' .                              (rule 23)

	','            reduce using rule 23
	']'            reduce using rule 23


State 310

	ControlState -> '@-i' .                             (rule 25)

	','            reduce using rule 25
	']'            reduce using rule 25


State 311

	ControlState -> '@0' .                              (rule 20)

	','            reduce using rule 20
	']'            reduce using rule 20


State 312

	ControlState -> '@1' .                              (rule 21)

	','            reduce using rule 21
	']'            reduce using rule 21


State 313

	Gate -> 'gate' GateIdent Term 'with-ctrl' '[' ListControl ']' .    (rule 95)

	'$'            reduce using rule 95
	'('            reduce using rule 95
	'()'           reduce using rule 95
	')'            reduce using rule 95
	','            reduce using rule 95
	'->'           reduce using rule 95
	';'            reduce using rule 95
	'@+'           reduce using rule 95
	'@+i'          reduce using rule 95
	'@-'           reduce using rule 95
	'@-i'          reduce using rule 95
	'@0'           reduce using rule 95
	'@1'           reduce using rule 95
	'else'         reduce using rule 95
	'gate'         reduce using rule 95
	'of'           reduce using rule 95
	'then'         reduce using rule 95
	'with-ctrl'    reduce using rule 95
	'}'            reduce using rule 95
	L_doubl        reduce using rule 95
	L_integ        reduce using rule 95
	L_Var          reduce using rule 95
	L_Bit          reduce using rule 95


State 314

	ListControl -> Control ',' . ListControl            (rule 28)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 321
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 315

	Term1 -> 'let' '{' LetVariable '=' Term '}' 'in' . Term    (rule 112)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 320

State 316

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' . '=' Term '}' 'in' Term    (rule 113)

	'='            shift, and enter state 319


State 317

	ListLetVariable -> LetVariable ',' . ListLetVariable    (rule 98)

	L_Var          shift, and enter state 8

	Var            goto state 143
	LetVariable    goto state 232
	ListLetVariablegoto state 318

State 318

	ListLetVariable -> LetVariable ',' ListLetVariable .    (rule 98)

	')'            reduce using rule 98


State 319

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' . Term '}' 'in' Term    (rule 113)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 339

State 320

	Term1 -> 'let' '{' LetVariable '=' Term '}' 'in' Term .    (rule 112)

	'$'            reduce using rule 112
	'('            reduce using rule 112
	'()'           reduce using rule 112
	')'            reduce using rule 112
	','            reduce using rule 112
	'->'           reduce using rule 112
	';'            reduce using rule 112
	'@+'           reduce using rule 112
	'@+i'          reduce using rule 112
	'@-'           reduce using rule 112
	'@-i'          reduce using rule 112
	'@0'           reduce using rule 112
	'@1'           reduce using rule 112
	'else'         reduce using rule 112
	'gate'         reduce using rule 112
	'of'           reduce using rule 112
	'then'         reduce using rule 112
	'with-ctrl'    reduce using rule 112
	'}'            reduce using rule 112
	L_doubl        reduce using rule 112
	L_integ        reduce using rule 112
	L_Var          reduce using rule 112
	L_Bit          reduce using rule 112


State 321

	ListControl -> Control ',' ListControl .            (rule 28)

	']'            reduce using rule 28


State 322

	Gate -> 'gate' 'ROOT_SWAP' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 91)

	'$'            reduce using rule 91
	'('            reduce using rule 91
	'()'           reduce using rule 91
	')'            reduce using rule 91
	','            reduce using rule 91
	'->'           reduce using rule 91
	';'            reduce using rule 91
	'@+'           reduce using rule 91
	'@+i'          reduce using rule 91
	'@-'           reduce using rule 91
	'@-i'          reduce using rule 91
	'@0'           reduce using rule 91
	'@1'           reduce using rule 91
	'else'         reduce using rule 91
	'gate'         reduce using rule 91
	'of'           reduce using rule 91
	'then'         reduce using rule 91
	'with-ctrl'    reduce using rule 91
	'}'            reduce using rule 91
	L_doubl        reduce using rule 91
	L_integ        reduce using rule 91
	L_Var          reduce using rule 91
	L_Bit          reduce using rule 91


State 323

	Gate -> 'gate' 'ROOT_SWAP_DAG' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 93)

	'$'            reduce using rule 93
	'('            reduce using rule 93
	'()'           reduce using rule 93
	')'            reduce using rule 93
	','            reduce using rule 93
	'->'           reduce using rule 93
	';'            reduce using rule 93
	'@+'           reduce using rule 93
	'@+i'          reduce using rule 93
	'@-'           reduce using rule 93
	'@-i'          reduce using rule 93
	'@0'           reduce using rule 93
	'@1'           reduce using rule 93
	'else'         reduce using rule 93
	'gate'         reduce using rule 93
	'of'           reduce using rule 93
	'then'         reduce using rule 93
	'with-ctrl'    reduce using rule 93
	'}'            reduce using rule 93
	L_doubl        reduce using rule 93
	L_integ        reduce using rule 93
	L_Var          reduce using rule 93
	L_Bit          reduce using rule 93


State 324

	Gate -> 'gate' 'ROOT_X' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 39)

	'$'            reduce using rule 39
	'('            reduce using rule 39
	'()'           reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	'->'           reduce using rule 39
	';'            reduce using rule 39
	'@+'           reduce using rule 39
	'@+i'          reduce using rule 39
	'@-'           reduce using rule 39
	'@-i'          reduce using rule 39
	'@0'           reduce using rule 39
	'@1'           reduce using rule 39
	'else'         reduce using rule 39
	'gate'         reduce using rule 39
	'of'           reduce using rule 39
	'then'         reduce using rule 39
	'with-ctrl'    reduce using rule 39
	'}'            reduce using rule 39
	L_doubl        reduce using rule 39
	L_integ        reduce using rule 39
	L_Var          reduce using rule 39
	L_Bit          reduce using rule 39


State 325

	Gate -> 'gate' 'ROOT_X_DAG' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 41)

	'$'            reduce using rule 41
	'('            reduce using rule 41
	'()'           reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	'->'           reduce using rule 41
	';'            reduce using rule 41
	'@+'           reduce using rule 41
	'@+i'          reduce using rule 41
	'@-'           reduce using rule 41
	'@-i'          reduce using rule 41
	'@0'           reduce using rule 41
	'@1'           reduce using rule 41
	'else'         reduce using rule 41
	'gate'         reduce using rule 41
	'of'           reduce using rule 41
	'then'         reduce using rule 41
	'with-ctrl'    reduce using rule 41
	'}'            reduce using rule 41
	L_doubl        reduce using rule 41
	L_integ        reduce using rule 41
	L_Var          reduce using rule 41
	L_Bit          reduce using rule 41


State 326

	Gate -> 'gate' 'ROOT_Y' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 43)

	'$'            reduce using rule 43
	'('            reduce using rule 43
	'()'           reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	';'            reduce using rule 43
	'@+'           reduce using rule 43
	'@+i'          reduce using rule 43
	'@-'           reduce using rule 43
	'@-i'          reduce using rule 43
	'@0'           reduce using rule 43
	'@1'           reduce using rule 43
	'else'         reduce using rule 43
	'gate'         reduce using rule 43
	'of'           reduce using rule 43
	'then'         reduce using rule 43
	'with-ctrl'    reduce using rule 43
	'}'            reduce using rule 43
	L_doubl        reduce using rule 43
	L_integ        reduce using rule 43
	L_Var          reduce using rule 43
	L_Bit          reduce using rule 43


State 327

	Gate -> 'gate' 'ROOT_Y_DAG' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 45)

	'$'            reduce using rule 45
	'('            reduce using rule 45
	'()'           reduce using rule 45
	')'            reduce using rule 45
	','            reduce using rule 45
	'->'           reduce using rule 45
	';'            reduce using rule 45
	'@+'           reduce using rule 45
	'@+i'          reduce using rule 45
	'@-'           reduce using rule 45
	'@-i'          reduce using rule 45
	'@0'           reduce using rule 45
	'@1'           reduce using rule 45
	'else'         reduce using rule 45
	'gate'         reduce using rule 45
	'of'           reduce using rule 45
	'then'         reduce using rule 45
	'with-ctrl'    reduce using rule 45
	'}'            reduce using rule 45
	L_doubl        reduce using rule 45
	L_integ        reduce using rule 45
	L_Var          reduce using rule 45
	L_Bit          reduce using rule 45


State 328

	Gate -> 'gate' 'ROOT_Z' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 47)

	'$'            reduce using rule 47
	'('            reduce using rule 47
	'()'           reduce using rule 47
	')'            reduce using rule 47
	','            reduce using rule 47
	'->'           reduce using rule 47
	';'            reduce using rule 47
	'@+'           reduce using rule 47
	'@+i'          reduce using rule 47
	'@-'           reduce using rule 47
	'@-i'          reduce using rule 47
	'@0'           reduce using rule 47
	'@1'           reduce using rule 47
	'else'         reduce using rule 47
	'gate'         reduce using rule 47
	'of'           reduce using rule 47
	'then'         reduce using rule 47
	'with-ctrl'    reduce using rule 47
	'}'            reduce using rule 47
	L_doubl        reduce using rule 47
	L_integ        reduce using rule 47
	L_Var          reduce using rule 47
	L_Bit          reduce using rule 47


State 329

	Gate -> 'gate' 'ROOT_Z_DAG' Integer Term 'with-ctrl' '[' ListControl ']' .    (rule 49)

	'$'            reduce using rule 49
	'('            reduce using rule 49
	'()'           reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	'->'           reduce using rule 49
	';'            reduce using rule 49
	'@+'           reduce using rule 49
	'@+i'          reduce using rule 49
	'@-'           reduce using rule 49
	'@-i'          reduce using rule 49
	'@0'           reduce using rule 49
	'@1'           reduce using rule 49
	'else'         reduce using rule 49
	'gate'         reduce using rule 49
	'of'           reduce using rule 49
	'then'         reduce using rule 49
	'with-ctrl'    reduce using rule 49
	'}'            reduce using rule 49
	L_doubl        reduce using rule 49
	L_integ        reduce using rule 49
	L_Var          reduce using rule 49
	L_Bit          reduce using rule 49


State 330

	Gate -> 'gate' 'RX' Angle Term 'with-ctrl' '[' ListControl ']' .    (rule 67)

	'$'            reduce using rule 67
	'('            reduce using rule 67
	'()'           reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	'->'           reduce using rule 67
	';'            reduce using rule 67
	'@+'           reduce using rule 67
	'@+i'          reduce using rule 67
	'@-'           reduce using rule 67
	'@-i'          reduce using rule 67
	'@0'           reduce using rule 67
	'@1'           reduce using rule 67
	'else'         reduce using rule 67
	'gate'         reduce using rule 67
	'of'           reduce using rule 67
	'then'         reduce using rule 67
	'with-ctrl'    reduce using rule 67
	'}'            reduce using rule 67
	L_doubl        reduce using rule 67
	L_integ        reduce using rule 67
	L_Var          reduce using rule 67
	L_Bit          reduce using rule 67


State 331

	Gate -> 'gate' 'RY' Angle Term 'with-ctrl' '[' ListControl ']' .    (rule 69)

	'$'            reduce using rule 69
	'('            reduce using rule 69
	'()'           reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	'->'           reduce using rule 69
	';'            reduce using rule 69
	'@+'           reduce using rule 69
	'@+i'          reduce using rule 69
	'@-'           reduce using rule 69
	'@-i'          reduce using rule 69
	'@0'           reduce using rule 69
	'@1'           reduce using rule 69
	'else'         reduce using rule 69
	'gate'         reduce using rule 69
	'of'           reduce using rule 69
	'then'         reduce using rule 69
	'with-ctrl'    reduce using rule 69
	'}'            reduce using rule 69
	L_doubl        reduce using rule 69
	L_integ        reduce using rule 69
	L_Var          reduce using rule 69
	L_Bit          reduce using rule 69


State 332

	Gate -> 'gate' 'RZ' Angle Term 'with-ctrl' '[' ListControl ']' .    (rule 71)

	'$'            reduce using rule 71
	'('            reduce using rule 71
	'()'           reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'->'           reduce using rule 71
	';'            reduce using rule 71
	'@+'           reduce using rule 71
	'@+i'          reduce using rule 71
	'@-'           reduce using rule 71
	'@-i'          reduce using rule 71
	'@0'           reduce using rule 71
	'@1'           reduce using rule 71
	'else'         reduce using rule 71
	'gate'         reduce using rule 71
	'of'           reduce using rule 71
	'then'         reduce using rule 71
	'with-ctrl'    reduce using rule 71
	'}'            reduce using rule 71
	L_doubl        reduce using rule 71
	L_integ        reduce using rule 71
	L_Var          reduce using rule 71
	L_Bit          reduce using rule 71


State 333

	Gate -> 'gate' 'SWAP_THETA' Angle Term 'with-ctrl' '[' ListControl ']' .    (rule 89)

	'$'            reduce using rule 89
	'('            reduce using rule 89
	'()'           reduce using rule 89
	')'            reduce using rule 89
	','            reduce using rule 89
	'->'           reduce using rule 89
	';'            reduce using rule 89
	'@+'           reduce using rule 89
	'@+i'          reduce using rule 89
	'@-'           reduce using rule 89
	'@-i'          reduce using rule 89
	'@0'           reduce using rule 89
	'@1'           reduce using rule 89
	'else'         reduce using rule 89
	'gate'         reduce using rule 89
	'of'           reduce using rule 89
	'then'         reduce using rule 89
	'with-ctrl'    reduce using rule 89
	'}'            reduce using rule 89
	L_doubl        reduce using rule 89
	L_integ        reduce using rule 89
	L_Var          reduce using rule 89
	L_Bit          reduce using rule 89


State 334

	Gate -> 'gate' 'U1' Angle Term 'with-ctrl' '[' ListControl ']' .    (rule 73)

	'$'            reduce using rule 73
	'('            reduce using rule 73
	'()'           reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'->'           reduce using rule 73
	';'            reduce using rule 73
	'@+'           reduce using rule 73
	'@+i'          reduce using rule 73
	'@-'           reduce using rule 73
	'@-i'          reduce using rule 73
	'@0'           reduce using rule 73
	'@1'           reduce using rule 73
	'else'         reduce using rule 73
	'gate'         reduce using rule 73
	'of'           reduce using rule 73
	'then'         reduce using rule 73
	'with-ctrl'    reduce using rule 73
	'}'            reduce using rule 73
	L_doubl        reduce using rule 73
	L_integ        reduce using rule 73
	L_Var          reduce using rule 73
	L_Bit          reduce using rule 73


State 335

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term .    (rule 74)
	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term . 'with-ctrl' '[' ListControl ']'    (rule 75)

	'$'            reduce using rule 74
	'('            reduce using rule 74
	'()'           reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	'->'           reduce using rule 74
	';'            reduce using rule 74
	'@+'           reduce using rule 74
	'@+i'          reduce using rule 74
	'@-'           reduce using rule 74
	'@-i'          reduce using rule 74
	'@0'           reduce using rule 74
	'@1'           reduce using rule 74
	'else'         reduce using rule 74
	'gate'         reduce using rule 74
	'of'           reduce using rule 74
	'then'         reduce using rule 74
	'with-ctrl'    shift, and enter state 338
			(reduce using rule 74)

	'}'            reduce using rule 74
	L_doubl        reduce using rule 74
	L_integ        reduce using rule 74
	L_Var          reduce using rule 74
	L_Bit          reduce using rule 74


State 336

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle . ')' Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle . ')' Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	')'            shift, and enter state 337


State 337

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' . Term    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' . Term 'with-ctrl' '[' ListControl ']'    (rule 77)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 342

State 338

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' . '[' ListControl ']'    (rule 75)

	'['            shift, and enter state 341


State 339

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' Term . '}' 'in' Term    (rule 113)

	'}'            shift, and enter state 340


State 340

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' Term '}' . 'in' Term    (rule 113)

	'in'           shift, and enter state 345


State 341

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' '[' . ListControl ']'    (rule 75)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 344
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 342

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term .    (rule 76)
	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term . 'with-ctrl' '[' ListControl ']'    (rule 77)

	'$'            reduce using rule 76
	'('            reduce using rule 76
	'()'           reduce using rule 76
	')'            reduce using rule 76
	','            reduce using rule 76
	'->'           reduce using rule 76
	';'            reduce using rule 76
	'@+'           reduce using rule 76
	'@+i'          reduce using rule 76
	'@-'           reduce using rule 76
	'@-i'          reduce using rule 76
	'@0'           reduce using rule 76
	'@1'           reduce using rule 76
	'else'         reduce using rule 76
	'gate'         reduce using rule 76
	'of'           reduce using rule 76
	'then'         reduce using rule 76
	'with-ctrl'    shift, and enter state 343
			(reduce using rule 76)

	'}'            reduce using rule 76
	L_doubl        reduce using rule 76
	L_integ        reduce using rule 76
	L_Var          reduce using rule 76
	L_Bit          reduce using rule 76


State 343

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' . '[' ListControl ']'    (rule 77)

	'['            shift, and enter state 348


State 344

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl . ']'    (rule 75)

	']'            shift, and enter state 347


State 345

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' . Term    (rule 113)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 346

State 346

	Term1 -> 'let' '{' '(' LetVariable ',' ListLetVariable ')' '=' Term '}' 'in' Term .    (rule 113)

	'$'            reduce using rule 113
	'('            reduce using rule 113
	'()'           reduce using rule 113
	')'            reduce using rule 113
	','            reduce using rule 113
	'->'           reduce using rule 113
	';'            reduce using rule 113
	'@+'           reduce using rule 113
	'@+i'          reduce using rule 113
	'@-'           reduce using rule 113
	'@-i'          reduce using rule 113
	'@0'           reduce using rule 113
	'@1'           reduce using rule 113
	'else'         reduce using rule 113
	'gate'         reduce using rule 113
	'of'           reduce using rule 113
	'then'         reduce using rule 113
	'with-ctrl'    reduce using rule 113
	'}'            reduce using rule 113
	L_doubl        reduce using rule 113
	L_integ        reduce using rule 113
	L_Var          reduce using rule 113
	L_Bit          reduce using rule 113


State 347

	Gate -> 'gate' 'U2' '(' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']' .    (rule 75)

	'$'            reduce using rule 75
	'('            reduce using rule 75
	'()'           reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	'->'           reduce using rule 75
	';'            reduce using rule 75
	'@+'           reduce using rule 75
	'@+i'          reduce using rule 75
	'@-'           reduce using rule 75
	'@-i'          reduce using rule 75
	'@0'           reduce using rule 75
	'@1'           reduce using rule 75
	'else'         reduce using rule 75
	'gate'         reduce using rule 75
	'of'           reduce using rule 75
	'then'         reduce using rule 75
	'with-ctrl'    reduce using rule 75
	'}'            reduce using rule 75
	L_doubl        reduce using rule 75
	L_integ        reduce using rule 75
	L_Var          reduce using rule 75
	L_Bit          reduce using rule 75


State 348

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' . ListControl ']'    (rule 77)

	'('            shift, and enter state 48
	'()'           shift, and enter state 49
	'case'         shift, and enter state 50
	'gate'         shift, and enter state 51
	'if'           shift, and enter state 52
	'let'          shift, and enter state 53
	L_Var          shift, and enter state 8
	L_Lambda       shift, and enter state 54
	L_Bit          shift, and enter state 55

	Var            goto state 39
	Lambda         goto state 40
	Bit            goto state 41
	Control        goto state 236
	ListControl    goto state 349
	Gate           goto state 42
	Tuple          goto state 43
	Term3          goto state 44
	Term1          goto state 45
	Term2          goto state 46
	Term           goto state 238

State 349

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl . ']'    (rule 77)

	']'            shift, and enter state 350


State 350

	Gate -> 'gate' 'U3' '(' Angle ',' Angle ',' Angle ')' Term 'with-ctrl' '[' ListControl ']' .    (rule 77)

	'$'            reduce using rule 77
	'('            reduce using rule 77
	'()'           reduce using rule 77
	')'            reduce using rule 77
	','            reduce using rule 77
	'->'           reduce using rule 77
	';'            reduce using rule 77
	'@+'           reduce using rule 77
	'@+i'          reduce using rule 77
	'@-'           reduce using rule 77
	'@-i'          reduce using rule 77
	'@0'           reduce using rule 77
	'@1'           reduce using rule 77
	'else'         reduce using rule 77
	'gate'         reduce using rule 77
	'of'           reduce using rule 77
	'then'         reduce using rule 77
	'with-ctrl'    reduce using rule 77
	'}'            reduce using rule 77
	L_doubl        reduce using rule 77
	L_integ        reduce using rule 77
	L_Var          reduce using rule 77
	L_Bit          reduce using rule 77


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 134
Number of terminals: 72
Number of non-terminals: 35
Number of states: 351
