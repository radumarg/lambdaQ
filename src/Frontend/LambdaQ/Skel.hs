-- File generated by the BNF Converter (bnfc 2.9.4.1).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module Frontend.LambdaQ.Skel where

import Prelude (($), Either(..), String, (++), Show, show)
import qualified Frontend.LambdaQ.Abs

type Err = Either String
type Result = Err String

failure :: Show a => a -> Result
failure x = Left $ "Undefined case: " ++ show x

transGateIdent :: Frontend.LambdaQ.Abs.GateIdent -> Result
transGateIdent x = case x of
  Frontend.LambdaQ.Abs.GateIdent string -> failure x

transVar :: Frontend.LambdaQ.Abs.Var -> Result
transVar x = case x of
  Frontend.LambdaQ.Abs.Var string -> failure x

transLambda :: Frontend.LambdaQ.Abs.Lambda -> Result
transLambda x = case x of
  Frontend.LambdaQ.Abs.Lambda string -> failure x

transBit :: Frontend.LambdaQ.Abs.Bit -> Result
transBit x = case x of
  Frontend.LambdaQ.Abs.Bit string -> failure x

transProgram :: Frontend.LambdaQ.Abs.Program -> Result
transProgram x = case x of
  Frontend.LambdaQ.Abs.ProgDef fundecs -> failure x

transType :: Frontend.LambdaQ.Abs.Type -> Result
transType x = case x of
  Frontend.LambdaQ.Abs.TypeBit -> failure x
  Frontend.LambdaQ.Abs.TypeQbit -> failure x
  Frontend.LambdaQ.Abs.TypeUnit -> failure x
  Frontend.LambdaQ.Abs.TypeExp type_ -> failure x
  Frontend.LambdaQ.Abs.TypeTensrs type_ integer -> failure x
  Frontend.LambdaQ.Abs.TypeTensr type_1 type_2 -> failure x
  Frontend.LambdaQ.Abs.TypeFunc type_1 type_2 -> failure x

transAngle :: Frontend.LambdaQ.Abs.Angle -> Result
transAngle x = case x of
  Frontend.LambdaQ.Abs.AAngl double -> failure x

transControlState :: Frontend.LambdaQ.Abs.ControlState -> Result
transControlState x = case x of
  Frontend.LambdaQ.Abs.CStateZero -> failure x
  Frontend.LambdaQ.Abs.CStateOne -> failure x
  Frontend.LambdaQ.Abs.CStatePlus -> failure x
  Frontend.LambdaQ.Abs.CStateMinus -> failure x
  Frontend.LambdaQ.Abs.CStatePlusI -> failure x
  Frontend.LambdaQ.Abs.CStateMinusI -> failure x

transControl :: Frontend.LambdaQ.Abs.Control -> Result
transControl x = case x of
  Frontend.LambdaQ.Abs.CCtrl controlstate term -> failure x

transGate :: Frontend.LambdaQ.Abs.Gate -> Result
transGate x = case x of
  Frontend.LambdaQ.Abs.GH -> failure x
  Frontend.LambdaQ.Abs.GHC controls -> failure x
  Frontend.LambdaQ.Abs.GX -> failure x
  Frontend.LambdaQ.Abs.GXC controls -> failure x
  Frontend.LambdaQ.Abs.GY -> failure x
  Frontend.LambdaQ.Abs.GYC controls -> failure x
  Frontend.LambdaQ.Abs.GZ -> failure x
  Frontend.LambdaQ.Abs.GZC controls -> failure x
  Frontend.LambdaQ.Abs.GI -> failure x
  Frontend.LambdaQ.Abs.GXRt integer -> failure x
  Frontend.LambdaQ.Abs.GXRtC integer controls -> failure x
  Frontend.LambdaQ.Abs.GXRtDag integer -> failure x
  Frontend.LambdaQ.Abs.GXRtDagC integer controls -> failure x
  Frontend.LambdaQ.Abs.GYRt integer -> failure x
  Frontend.LambdaQ.Abs.GYRtC integer controls -> failure x
  Frontend.LambdaQ.Abs.GYRtDag integer -> failure x
  Frontend.LambdaQ.Abs.GYRtDagC integer controls -> failure x
  Frontend.LambdaQ.Abs.GZRt integer -> failure x
  Frontend.LambdaQ.Abs.GZRtC integer controls -> failure x
  Frontend.LambdaQ.Abs.GZRtDag integer -> failure x
  Frontend.LambdaQ.Abs.GZRtDagC integer controls -> failure x
  Frontend.LambdaQ.Abs.GS -> failure x
  Frontend.LambdaQ.Abs.GSC controls -> failure x
  Frontend.LambdaQ.Abs.GSDag -> failure x
  Frontend.LambdaQ.Abs.GSDagC controls -> failure x
  Frontend.LambdaQ.Abs.GT -> failure x
  Frontend.LambdaQ.Abs.GTC controls -> failure x
  Frontend.LambdaQ.Abs.GTDag -> failure x
  Frontend.LambdaQ.Abs.GTDagC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtX -> failure x
  Frontend.LambdaQ.Abs.GSqrtXC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtXDag -> failure x
  Frontend.LambdaQ.Abs.GSqrtXDagC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtY -> failure x
  Frontend.LambdaQ.Abs.GSqrtYC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtYDag -> failure x
  Frontend.LambdaQ.Abs.GSqrtYDagC controls -> failure x
  Frontend.LambdaQ.Abs.GRxTheta angle -> failure x
  Frontend.LambdaQ.Abs.GRxThetaC angle controls -> failure x
  Frontend.LambdaQ.Abs.GRyTheta angle -> failure x
  Frontend.LambdaQ.Abs.GRyThetaC angle controls -> failure x
  Frontend.LambdaQ.Abs.GRzTheta angle -> failure x
  Frontend.LambdaQ.Abs.GRzThetaC angle controls -> failure x
  Frontend.LambdaQ.Abs.GU1 angle -> failure x
  Frontend.LambdaQ.Abs.GU1C angle controls -> failure x
  Frontend.LambdaQ.Abs.GU2 angle1 angle2 -> failure x
  Frontend.LambdaQ.Abs.GU2C angle1 angle2 controls -> failure x
  Frontend.LambdaQ.Abs.GU3 angle1 angle2 angle3 -> failure x
  Frontend.LambdaQ.Abs.GU3C angle1 angle2 angle3 controls -> failure x
  Frontend.LambdaQ.Abs.GSwp -> failure x
  Frontend.LambdaQ.Abs.GSwpC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtSwp -> failure x
  Frontend.LambdaQ.Abs.GSqrtSwpC controls -> failure x
  Frontend.LambdaQ.Abs.GSqrtSwpDag -> failure x
  Frontend.LambdaQ.Abs.GSqrtSwpDagC controls -> failure x
  Frontend.LambdaQ.Abs.GISwp -> failure x
  Frontend.LambdaQ.Abs.GISwpC controls -> failure x
  Frontend.LambdaQ.Abs.GFSwp -> failure x
  Frontend.LambdaQ.Abs.GFSwpC controls -> failure x
  Frontend.LambdaQ.Abs.GSwpRt integer -> failure x
  Frontend.LambdaQ.Abs.GSwpRtC integer controls -> failure x
  Frontend.LambdaQ.Abs.GSwpRtDag integer -> failure x
  Frontend.LambdaQ.Abs.GSwpRtDagC integer controls -> failure x
  Frontend.LambdaQ.Abs.GGate gateident -> failure x
  Frontend.LambdaQ.Abs.GGateC gateident controls -> failure x

transLetVariable :: Frontend.LambdaQ.Abs.LetVariable -> Result
transLetVariable x = case x of
  Frontend.LambdaQ.Abs.LetVar var -> failure x

transLambdaVariable :: Frontend.LambdaQ.Abs.LambdaVariable -> Result
transLambdaVariable x = case x of
  Frontend.LambdaQ.Abs.LambdaVar var -> failure x

transTuple :: Frontend.LambdaQ.Abs.Tuple -> Result
transTuple x = case x of
  Frontend.LambdaQ.Abs.Tup term terms -> failure x

transTerm :: Frontend.LambdaQ.Abs.Term -> Result
transTerm x = case x of
  Frontend.LambdaQ.Abs.TVar var -> failure x
  Frontend.LambdaQ.Abs.TBit bit -> failure x
  Frontend.LambdaQ.Abs.TGate gate -> failure x
  Frontend.LambdaQ.Abs.TTup tuple -> failure x
  Frontend.LambdaQ.Abs.TUnit -> failure x
  Frontend.LambdaQ.Abs.TIfEl term1 term2 term3 -> failure x
  Frontend.LambdaQ.Abs.TLet1 letvariable term1 term2 -> failure x
  Frontend.LambdaQ.Abs.TLet2 letvariable letvariables term1 term2 -> failure x
  Frontend.LambdaQ.Abs.TCase term caseexpression caseexpressions -> failure x
  Frontend.LambdaQ.Abs.TLmbd lambda lambdavariable lambdavariables term -> failure x
  Frontend.LambdaQ.Abs.TApp term1 term2 -> failure x
  Frontend.LambdaQ.Abs.TDollr term1 term2 -> failure x

transCaseExpression :: Frontend.LambdaQ.Abs.CaseExpression -> Result
transCaseExpression x = case x of
  Frontend.LambdaQ.Abs.CaseExp term var -> failure x

transArg :: Frontend.LambdaQ.Abs.Arg -> Result
transArg x = case x of
  Frontend.LambdaQ.Abs.FunArg var -> failure x

transFunction :: Frontend.LambdaQ.Abs.Function -> Result
transFunction x = case x of
  Frontend.LambdaQ.Abs.FunDef var args term -> failure x

transFunctionType :: Frontend.LambdaQ.Abs.FunctionType -> Result
transFunctionType x = case x of
  Frontend.LambdaQ.Abs.TypeDef var type_ -> failure x

transFunDec :: Frontend.LambdaQ.Abs.FunDec -> Result
transFunDec x = case x of
  Frontend.LambdaQ.Abs.FunDecl functiontype function -> failure x
